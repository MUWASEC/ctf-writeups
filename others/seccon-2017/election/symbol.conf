# r2 rdb project file
"o /home/muwa00/p1tfall/ctf-writeups/others/seccon-2017/election/election"
# eval
"e anal.a2f = false"
"e anal.arch = x86"
"e anal.armthumb = false"
"e anal.autoname = false"
"e anal.bb.maxsize = 512K"
"e anal.brokenrefs = false"
"e anal.calls = false"
"e anal.cpp.abi = itanium"
"e anal.cpu = x86"
"e anal.datarefs = false"
"e anal.delay = true"
"e anal.depth = 64"
"e anal.endsize = true"
"e anal.esil = false"
"e anal.fcnprefix = fcn"
"e anal.from = 0xffffffffffffffff"
"e anal.gp = 0"
"e anal.gpfixed = true"
"e anal.graph_depth = 256"
"e anal.hasnext = false"
"e anal.hpskip = false"
"e anal.ignbithints = false"
"e anal.in = io.maps.x"
"e anal.jmp.above = true"
"e anal.jmp.after = true"
"e anal.jmp.cref = false"
"e anal.jmp.indir = false"
"e anal.jmp.mid = true"
"e anal.jmp.ref = true"
"e anal.jmp.retpoline = true"
"e anal.jmp.tailcall = 0"
"e anal.jmp.tbl = true"
"e anal.limits = false"
"e anal.loads = false"
"e anal.nonull = 0"
"e anal.nopskip = true"
"e anal.norevisit = false"
"e anal.prelude = "
"e anal.ptrdepth = 3"
"e anal.pushret = false"
"e anal.recont = false"
"e anal.refstr = false"
"e anal.rnr = false"
"e anal.roregs = gp,zero"
"e anal.sleep = 0"
"e anal.strings = false"
"e anal.timeout = 0"
"e anal.to = 0xffffffffffffffff"
"e anal.trycatch = false"
"e anal.types.constraint = true"
"e anal.types.spec = gcc"
"e anal.types.verbose = false"
"e anal.vars = true"
"e anal.vars.stackname = false"
"e anal.verbose = false"
"e anal.vinfun = true"
"e anal.vinfunrange = false"
"e asm.anal = false"
"e asm.arch = x86"
"e asm.assembler = "
"e asm.bb.line = false"
"e asm.bb.middle = true"
"e asm.bits = 64"
"e asm.bytes = true"
"e asm.bytes.right = false"
"e asm.bytes.space = false"
"e asm.calls = true"
"e asm.capitalize = false"
"e asm.cmt.col = 71"
"e asm.cmt.esil = false"
"e asm.cmt.flgrefs = true"
"e asm.cmt.fold = false"
"e asm.cmt.off = nodup"
"e asm.cmt.patch = false"
"e asm.cmt.refs = false"
"e asm.cmt.right = true"
"e asm.comments = true"
"e asm.cpu = x86"
"e asm.cycles = false"
"e asm.cyclespace = false"
"e asm.decode = false"
"e asm.decoff = false"
"e asm.demangle = true"
"e asm.describe = false"
"e asm.dwarf = true"
"e asm.dwarf.abspath = false"
"e asm.dwarf.file = true"
"e asm.emu = false"
"e asm.esil = false"
"e asm.family = false"
"e asm.fcnsig = true"
"e asm.features = "
"e asm.flags = true"
"e asm.flags.inbytes = false"
"e asm.flags.inline = false"
"e asm.flags.limit = 0"
"e asm.flags.maxname = 0"
"e asm.flags.middle = 2"
"e asm.flags.offset = false"
"e asm.flags.real = false"
"e asm.functions = true"
"e asm.highlight = "
"e asm.hint.call = true"
"e asm.hint.cdiv = false"
"e asm.hint.emu = false"
"e asm.hint.jmp = false"
"e asm.hint.lea = false"
"e asm.hint.pos = 1"
"e asm.hints = true"
"e asm.imm.arm = 0"
"e asm.imm.str = true"
"e asm.imm.trim = false"
"e asm.indent = false"
"e asm.indentspace = 2"
"e asm.instr = true"
"e asm.invhex = false"
"e asm.lbytes = true"
"e asm.lines = true"
"e asm.lines.bb = true"
"e asm.lines.call = false"
"e asm.lines.fcn = true"
"e asm.lines.maxref = 0"
"e asm.lines.out = true"
"e asm.lines.ret = false"
"e asm.lines.right = false"
"e asm.lines.wide = false"
"e asm.lines.width = 7"
"e asm.marks = true"
"e asm.meta = true"
"e asm.midcursor = false"
"e asm.middle = false"
"e asm.minicols = false"
"e asm.nbytes = 6"
"e asm.nodup = false"
"e asm.noisy = true"
"e asm.offset = true"
"e asm.optype = false"
"e asm.os = linux"
"e asm.parser = x86.pseudo"
"e asm.payloads = false"
"e asm.pcalign = 0"
"e asm.pseudo = false"
"e asm.refptr = true"
"e asm.reloff = false"
"e asm.reloff.flags = false"
"e asm.section = false"
"e asm.section.col = 20"
"e asm.section.name = true"
"e asm.section.perm = false"
"e asm.seggrn = 4"
"e asm.segoff = false"
"e asm.size = false"
"e asm.slow = true"
"e asm.stackptr = false"
"e asm.strip = "
"e asm.sub.jmp = true"
"e asm.sub.names = true"
"e asm.sub.reg = false"
"e asm.sub.rel = true"
"e asm.sub.section = false"
"e asm.sub.tail = false"
"e asm.sub.var = true"
"e asm.sub.varmin = 256"
"e asm.sub.varonly = true"
"e asm.symbol = false"
"e asm.symbol.col = 40"
"e asm.syntax = intel"
"e asm.tabs = 0"
"e asm.tabs.off = 0"
"e asm.tabs.once = false"
"e asm.trace = false"
"e asm.tracespace = false"
"e asm.types = 1"
"e asm.ucase = false"
"e asm.usercomments = false"
"e asm.var = true"
"e asm.var.access = false"
"e asm.var.summary = 0"
"e asm.xrefs = true"
"e asm.xrefs.code = true"
"e asm.xrefs.fold = 5"
"e asm.xrefs.max = 20"
"e bin.at = false"
"e bin.b64str = false"
"e bin.baddr = 0x00400000"
"e bin.classes = true"
"e bin.dbginfo = true"
"e bin.debase64 = false"
"e bin.demangle = true"
"e bin.demangle.libs = false"
"e bin.filter = true"
"e bin.force = "
"e bin.hashlimit = 10M"
"e bin.laddr = 0"
"e bin.lang = c"
"e bin.libs = false"
"e bin.maxstr = 0"
"e bin.maxstrbuf = 0x00a00000"
"e bin.minstr = 0"
"e bin.prefix = "
"e bin.rawstr = false"
"e bin.relocs = true"
"e bin.str.enc = guess"
"e bin.str.filter = "
"e bin.str.purge = "
"e bin.strings = true"
"e bin.useldr = true"
"e bin.usextr = true"
"e bin.verbose = false"
"e cfg.bigendian = false"
"e cfg.corelog = false"
"e cfg.cpuaffinity = 0"
"e cfg.debug = false"
"e cfg.editor = vi"
"e cfg.fortunes = 1"
"e cfg.fortunes.clippy = false"
"e cfg.fortunes.tts = false"
"e cfg.fortunes.type = tips,fun"
"e cfg.newshell = false"
"e cfg.newtab = false"
"e cfg.plugins = true"
"e cfg.prefixdump = dump"
"e cfg.r2wars = false"
"e cfg.sandbox = false"
"e cfg.user = pid430984"
"e cfg.wseek = false"
"e cmd.bp = "
"e cmd.cprompt = "
"e cmd.demangle = false"
"e cmd.depth = 10"
"e cmd.esil.intr = "
"e cmd.esil.ioer = "
"e cmd.esil.mdev = "
"e cmd.esil.step = "
"e cmd.esil.stepout = "
"e cmd.esil.todo = "
"e cmd.esil.trap = "
"e cmd.fcn.delete = "
"e cmd.fcn.new = "
"e cmd.fcn.rename = "
"e cmd.gprompt = "
"e cmd.hexcursor = "
"e cmd.hit = "
"e cmd.hitinfo = 1"
"e cmd.load = "
"e cmd.log = "
"e cmd.onsyscall = "
"e cmd.open = "
"e cmd.pdc = "
"e cmd.prompt = "
"e cmd.repeat = false"
"e cmd.stack = "
"e cmd.times = "
"e cmd.visual = "
"e cmd.vprompt = "
"e cmd.xterm = xterm -bg black -fg gray -e"
"e dbg.aftersyscall = true"
"e dbg.args = "
"e dbg.backend = native"
"e dbg.bep = loader"
"e dbg.bpinmaps = true"
"e dbg.bpsize = 1"
"e dbg.bpsysign = false"
"e dbg.btalgo = fuzzy"
"e dbg.btdepth = 128"
"e dbg.clone = false"
"e dbg.consbreak = false"
"e dbg.exe.path = "
"e dbg.execs = false"
"e dbg.exitkills = true"
"e dbg.follow = 64"
"e dbg.follow.child = false"
"e dbg.forks = false"
"e dbg.funcarg = false"
"e dbg.gdb.page_size = 0x00001000"
"e dbg.gdb.retries = 10"
"e dbg.glibc.demangle = false"
"e dbg.glibc.fc_offset = 640"
"e dbg.glibc.ma_offset = 0"
"e dbg.glibc.tcache = true"
"e dbg.hwbp = 0"
"e dbg.libc.dbglib = "
"e dbg.libs = "
"e dbg.malloc = glibc"
"e dbg.profile = "
"e dbg.rebase = true"
"e dbg.skipover = false"
"e dbg.slow = false"
"e dbg.status = false"
"e dbg.swstep = false"
"e dbg.threads = false"
"e dbg.trace = false"
"e dbg.trace.inrange = false"
"e dbg.trace.libs = true"
"e dbg.trace.tag = 0"
"e dbg.trace_continue = true"
"e dbg.unlibs = "
"e dbg.verbose = true"
"e diff.bare = false"
"e diff.from = 0"
"e diff.levenstein = false"
"e diff.sort = addr"
"e diff.to = 0"
"e dir.depth = 10"
"e dir.home = /home/muwa00"
"e dir.libs = "
"e dir.magic = /usr/local/share/radare2/4.6.0-git/magic"
"e dir.plugins = /usr/local/lib/radare2/4.6.0-git"
"e dir.prefix = /usr/local"
"e dir.projects = ~/.local/share/radare2/projects"
"e dir.source = "
"e dir.tmp = "
"e dir.types = /usr/include"
"e dir.zigns = ~/.local/share/radare2/zigns"
"e emu.lazy = false"
"e emu.pre = false"
"e emu.skip = ds"
"e emu.ssa = false"
"e emu.stack = false"
"e emu.str = false"
"e emu.str.flag = true"
"e emu.str.inv = true"
"e emu.str.lea = true"
"e emu.str.off = false"
"e emu.write = false"
"e esil.addr.size = 64"
"e esil.breakoninvalid = false"
"e esil.exectrap = false"
"e esil.fillstack = "
"e esil.gotolimit = 0x00001000"
"e esil.iotrap = true"
"e esil.mdev.range = "
"e esil.nonull = false"
"e esil.prestep = true"
"e esil.romem = false"
"e esil.stack.addr = 0x00100000"
"e esil.stack.depth = 256"
"e esil.stack.pattern = 0"
"e esil.stack.size = 0x000f0000"
"e esil.stats = false"
"e esil.timeout = 0"
"e esil.verbose = 0"
"e file.desc = "
"e file.info = true"
"e file.lastpath = "
"e file.loadalign = 0x00000400"
"e file.location = "
"e file.md5 = "
"e file.offset = "
"e file.openmany = 1"
"e file.path = "
"e file.type = elf"
"e fs.view = normal"
"e graph.aeab = false"
"e graph.body = true"
"e graph.bubble = false"
"e graph.bytes = false"
"e graph.cmtright = false"
"e graph.comments = true"
"e graph.dotted = false"
"e graph.dummy = true"
"e graph.edges = 2"
"e graph.few = false"
"e graph.font = Courier"
"e graph.from = 0xffffffffffffffff"
"e graph.gv.current = false"
"e graph.gv.edge = "
"e graph.gv.format = gif"
"e graph.gv.graph = "
"e graph.gv.node = "
"e graph.gv.spline = "
"e graph.hints = true"
"e graph.invscroll = false"
"e graph.json.usenames = true"
"e graph.layout = 0"
"e graph.linemode = 1"
"e graph.nodejmps = true"
"e graph.ntitles = true"
"e graph.offset = false"
"e graph.refs = false"
"e graph.scroll = 5"
"e graph.title = "
"e graph.to = 0xffffffffffffffff"
"e graph.trace = false"
"e graph.web = false"
"e hex.align = false"
"e hex.ascii = true"
"e hex.bytes = true"
"e hex.cols = 16"
"e hex.comments = true"
"e hex.compact = false"
"e hex.depth = 5"
"e hex.flagsz = 0"
"e hex.hdroff = false"
"e hex.header = true"
"e hex.offset = true"
"e hex.onechar = false"
"e hex.pairs = true"
"e hex.section = false"
"e hex.stride = 0"
"e hex.style = false"
"e http.allow = "
"e http.auth = false"
"e http.authfile = "
"e http.authtok = r2admin:r2admin"
"e http.bind = localhost"
"e http.browser = xdg-open"
"e http.colon = false"
"e http.cors = false"
"e http.dietime = 0"
"e http.dirlist = false"
"e http.homeroot = ~/.local/share/radare2/www"
"e http.index = index.html"
"e http.log = true"
"e http.logfile = "
"e http.maxport = 9999"
"e http.maxsize = 0"
"e http.port = 9090"
"e http.referer = "
"e http.root = /usr/local/share/radare2/4.6.0-git/www"
"e http.sandbox = true"
"e http.sync = "
"e http.timeout = 3"
"e http.ui = m"
"e http.upget = false"
"e http.upload = false"
"e http.uproot = /tmp"
"e http.uri = "
"e http.verbose = false"
"e hud.path = "
"e io.0xff = 255"
"e io.aslr = false"
"e io.autofd = true"
"e io.cache = false"
"e io.cache.auto = false"
"e io.cache.read = false"
"e io.cache.write = false"
"e io.exec = true"
"e io.ff = true"
"e io.pava = false"
"e io.pcache = false"
"e io.pcache.read = 0"
"e io.pcache.write = 0"
"e io.unalloc = false"
"e io.unalloc.ch = ."
"e io.va = true"
"e key.S = "
"e key.f1 = "
"e key.f10 = "
"e key.f11 = "
"e key.f12 = "
"e key.f2 = "
"e key.f3 = "
"e key.f4 = "
"e key.f5 = "
"e key.f6 = "
"e key.f7 = "
"e key.f8 = "
"e key.f9 = "
"e key.s = "
"e lines.abs = false"
"e lines.from = 0"
"e lines.to = $s"
"e log.colors = false"
"e log.events = false"
"e log.file = "
"e log.level = 4"
"e log.srcinfo = false"
"e log.traplevel = 6"
"e magic.depth = 100"
"e pdb.autoload = 0"
"e pdb.extract = 1"
"e pdb.server = https://msdl.microsoft.com/download/symbols"
"e pdb.symstore = /home/muwa00/.local/share/radare2/pdb"
"e pdb.useragent = Microsoft-Symbol-Server/6.11.0001.402"
"e prj.files = false"
"e prj.git = false"
"e prj.gpg = false"
"e prj.name = symbol.conf"
"e prj.simple = false"
"e prj.zip = false"
"e r2dec.asm = false"
"e r2dec.blocks = false"
"e r2dec.casts = false"
"e r2dec.debug = false"
"e r2dec.highlight = default"
"e r2dec.paddr = false"
"e r2dec.slow = false"
"e r2dec.theme = default"
"e r2dec.xrefs = false"
"e r2ghidra.cmt.cpp = true"
"e r2ghidra.cmt.indent = 4"
"e r2ghidra.indent = 4"
"e r2ghidra.lang = "
"e r2ghidra.linelen = 120"
"e r2ghidra.nl.brace = false"
"e r2ghidra.nl.else = false"
"e r2ghidra.rawptr = true"
"e r2ghidra.sleighhome = /home/muwa00/.local/share/radare2/plugins/r2ghidra_sleigh"
"e r2ghidra.verbose = true"
"e rap.loop = true"
"e rop.comments = false"
"e rop.conditional = false"
"e rop.db = true"
"e rop.len = 5"
"e rop.sdb = false"
"e rop.subchains = false"
"e scr.bgfill = false"
"e scr.breaklines = false"
"e scr.breakword = "
"e scr.color = 3"
"e scr.color.args = true"
"e scr.color.bytes = true"
"e scr.color.grep = false"
"e scr.color.ops = true"
"e scr.color.pipe = false"
"e scr.columns = 0"
"e scr.confirmquit = false"
"e scr.demo = false"
"e scr.dumpcols = false"
"e scr.echo = false"
"e scr.feedback = 1"
"e scr.fgets = false"
"e scr.fix.columns = 0"
"e scr.fix.rows = 0"
"e scr.flush = false"
"e scr.fps = false"
"e scr.gadgets = true"
"e scr.highlight = "
"e scr.highlight.grep = false"
"e scr.hist.block = true"
"e scr.histsave = true"
"e scr.html = false"
"e scr.interactive = 1"
"e scr.last = true"
"e scr.layout = "
"e scr.linesleep = 0"
"e scr.maxtab = 0x00001000"
"e scr.nkey = flag"
"e scr.null = false"
"e scr.pager = "
"e scr.pagesize = 1"
"e scr.panelborder = false"
"e scr.prompt = 1"
"e scr.prompt.file = false"
"e scr.prompt.flag = false"
"e scr.prompt.mode = false"
"e scr.prompt.popup = false"
"e scr.prompt.sect = false"
"e scr.prompt.vi = false"
"e scr.rainbow = false"
"e scr.randpal = false"
"e scr.responsive = false"
"e scr.rows = 0"
"e scr.scrollbar = 0"
"e scr.seek = "
"e scr.slow = true"
"e scr.square = true"
"e scr.strconv = asciiesc"
"e scr.tee = "
"e scr.tts = false"
"e scr.utf8 = true"
"e scr.utf8.curvy = false"
"e scr.wheel = true"
"e scr.wheel.nkey = false"
"e scr.wheel.speed = 4"
"e scr.wideoff = false"
"e search.align = 0"
"e search.chunk = 0"
"e search.contiguous = true"
"e search.distance = 0"
"e search.esilcombo = 8"
"e search.flags = true"
"e search.from = 0xffffffffffffffff"
"e search.in = io.maps"
"e search.kwidx = 0"
"e search.maxhits = 0"
"e search.overlap = false"
"e search.prefix = hit"
"e search.show = true"
"e search.to = 0xffffffffffffffff"
"e stack.anotated = false"
"e stack.bytes = true"
"e stack.delta = 0"
"e stack.reg = SP"
"e stack.size = 64"
"e str.escbslash = false"
"e tcp.islocal = false"
"e time.fmt = %Y-%m-%d %H:%M:%S %z"
"e time.zone = 0"
"e zign.autoload = false"
"e zign.bytes = true"
"e zign.diff.bthresh = 1.0"
"e zign.diff.gthresh = 1.0"
"e zign.graph = true"
"e zign.hash = true"
"e zign.maxsz = 500"
"e zign.mincc = 10"
"e zign.minsz = 16"
"e zign.offset = false"
"e zign.prefix = sign"
"e zign.refs = true"
"e zign.threshold = 0.0"
"e zign.types = true"
"e zoom.byte = h"
"e zoom.from = 0"
"e zoom.in = io.map"
"e zoom.maxsz = 512"
"e zoom.to = 0"
# functions
fs functions
"f entry0 42 0x00400800"
"af+ 0x00400800 entry0 f n"
afb+ 0x00400800 0x00400800 42 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400800
afc amd64 @ 0x00400800
afvr dil arg3 int64_t @ 0x400800
axd 0x400eb0 0x40080f
axd 0x400e40 0x400816
axd 0x400922 0x40081d
axC 0x4007c0 0x400824
afS 8 @ 0x400800
"f sym.imp.__libc_start_main 6 0x004007c0"
"af+ 0x004007c0 sym.imp.__libc_start_main f n"
afb+ 0x004007c0 0x004007c0 6 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x004007c0
afc amd64 @ 0x004007c0
axc 0x601fc0 0x4007c0
afS 0 @ 0x4007c0
"f sym.deregister_tm_clones 50 0x00400830"
"af+ 0x00400830 sym.deregister_tm_clones s n"
afb+ 0x00400830 0x00400830 21 0x00400860 0x00400845
afb+ 0x00400830 0x00400845 10 0x00400860 0x0040084f
afb+ 0x00400830 0x0040084f 8 0xffffffffffffffff 0xffffffffffffffff
afb+ 0x00400830 0x00400860 2 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400830
afc amd64 @ 0x00400830
axd 0x60201f 0x400830
axd 0x602018 0x400836
axc 0x400860 0x400843
axc 0x400860 0x40084d
axd 0x602018 0x400850
afS 8 @ 0x400830
"f sym.register_tm_clones 58 0x00400870"
"af+ 0x00400870 sym.register_tm_clones s n"
afb+ 0x00400870 0x00400870 35 0x004008a8 0x00400893
afb+ 0x00400870 0x00400893 10 0x004008a8 0x0040089d
afb+ 0x00400870 0x0040089d 8 0xffffffffffffffff 0xffffffffffffffff
afb+ 0x00400870 0x004008a8 2 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400870
afc amd64 @ 0x00400870
axd 0x602018 0x400870
axd 0x602018 0x400876
axc 0x4008a8 0x400891
axc 0x4008a8 0x40089b
axd 0x602018 0x40089e
afS 8 @ 0x400870
"f sym.__do_global_dtors_aux 28 0x004008b0"
"af+ 0x004008b0 sym.__do_global_dtors_aux s n"
afb+ 0x004008b0 0x004008b0 9 0x004008ca 0x004008b9
afb+ 0x004008b0 0x004008b9 17 0x004008ca 0xffffffffffffffff
afb+ 0x004008b0 0x004008ca 2 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x004008b0
afc amd64 @ 0x004008b0
axd 0x602020 0x4008b0
axc 0x4008ca 0x4008b7
axC 0x400830 0x4008bd
axd 0x602020 0x4008c3
afS 8 @ 0x4008b0
"f entry.init0 38 0x004008d0"
"af+ 0x004008d0 entry.init0 f n"
afb+ 0x004008d0 0x004008d0 11 0x004008e0 0x004008db
afb+ 0x004008d0 0x004008db 2 0x00400870 0xffffffffffffffff
afb+ 0x004008d0 0x004008e0 10 0x004008db 0x004008ea
afb+ 0x004008d0 0x004008ea 12 0x00400870 0xffffffffffffffff
afB 64 @ 0x004008d0
afc amd64 @ 0x004008d0
axd 0x601da0 0x4008d0
axc 0x4008e0 0x4008d9
axc 0x400870 0x4008db
axc 0x4008db 0x4008e8
axc 0x400870 0x4008f1
afS 8 @ 0x4008d0
"f sym.__libc_csu_fini 2 0x00400eb0"
"af+ 0x00400eb0 sym.__libc_csu_fini s n"
afb+ 0x00400eb0 0x00400eb0 2 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400eb0
afc amd64 @ 0x00400eb0
afS 0 @ 0x400eb0
"f sym.add_list 121 0x00400c87"
"af+ 0x00400c87 sym.add_list s n"
afb+ 0x00400c87 0x00400c87 121 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400c87
afc amd64 @ 0x00400c87
afvb -24 var_18h int64_t @ 0x400c87
afvb -8 var_8h int64_t @ 0x400c87
afvr rdi arg1 int64_t @ 0x400c87
axC 0x4007e0 0x400c98
axC 0x4007f0 0x400ca8
axC 0x4007f8 0x400cb7
axd 0x602028 0x400ce3
axd 0x602028 0x400cf6
afS 40 @ 0x400c87
"f sym.imp.malloc 6 0x004007e0"
"af+ 0x004007e0 sym.imp.malloc f n"
afb+ 0x004007e0 0x004007e0 6 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x004007e0
afc amd64 @ 0x004007e0
axc 0x601fe0 0x4007e0
afS 0 @ 0x4007e0
"f sym.imp.strdup 6 0x004007f0"
"af+ 0x004007f0 sym.imp.strdup f n"
afb+ 0x004007f0 0x004007f0 6 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x004007f0
afc amd64 @ 0x004007f0
axc 0x601ff0 0x4007f0
afS 0 @ 0x4007f0
"f sym.imp.rand 6 0x004007f8"
"af+ 0x004007f8 sym.imp.rand f n"
afb+ 0x004007f8 0x004007f8 6 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x004007f8
afc amd64 @ 0x004007f8
axc 0x601ff8 0x4007f8
afS 0 @ 0x4007f8
"f sym.menu 46 0x004009b3"
"af+ 0x004009b3 sym.menu s n"
afb+ 0x004009b3 0x004009b3 46 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x004009b3
afc amd64 @ 0x004009b3
afvb -4 var_4h int64_t @ 0x4009b3
axd 0x400f18 0x4009bb
axC 0x4007b0 0x4009c5
axC 0x400dca 0x4009ca
axC 0x400780 0x4009d7
afS 24 @ 0x4009b3
"f sym.imp.printf 6 0x004007b0"
"af+ 0x004007b0 sym.imp.printf f n"
afb+ 0x004007b0 0x004007b0 6 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x004007b0
afc amd64 @ 0x004007b0
axc 0x601fb0 0x4007b0
afS 0 @ 0x4007b0
"f sym.getint 106 0x00400dca"
"af+ 0x00400dca sym.getint s n"
afb+ 0x00400dca 0x00400dca 99 0x00400e32 0x00400e2d
afb+ 0x00400dca 0x00400e2d 5 0x00400e32 0xffffffffffffffff
afb+ 0x00400dca 0x00400e32 2 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400dca
afc amd64 @ 0x00400dca
afvb -48 var_30h int64_t @ 0x400dca
afvb -40 var_28h int64_t @ 0x400dca
afvb -32 var_20h int64_t @ 0x400dca
afvb -24 var_18h int64_t @ 0x400dca
afvb -8 var_8h int64_t @ 0x400dca
axC 0x400d53 0x400e0d
axC 0x4007e8 0x400e19
axc 0x400e32 0x400e2b
axC 0x400798 0x400e2d
afS 56 @ 0x400dca
"f sym.getnline 119 0x00400d53"
"af+ 0x00400d53 sym.getnline s n"
afb+ 0x00400d53 0x00400d53 21 0x00400d8b 0x00400d68
afb+ 0x00400d53 0x00400d68 35 0x00400d92 0x00400d8b
afb+ 0x00400d53 0x00400d8b 7 0x00400dc8 0xffffffffffffffff
afb+ 0x00400d53 0x00400d92 44 0x00400dc5 0x00400dbe
afb+ 0x00400d53 0x00400dbe 7 0x00400dc5 0xffffffffffffffff
afb+ 0x00400d53 0x00400dc5 3 0x00400dc8 0xffffffffffffffff
afb+ 0x00400d53 0x00400dc8 2 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400d53
afc amd64 @ 0x00400d53
afvb -28 var_1ch signed int64_t @ 0x400d53
afvb -24 var_18h int64_t @ 0x400d53
afvb -12 var_ch uint32_t @ 0x400d53
afvb -8 var_8h uint32_t @ 0x400d53
afvr rsi arg2 signed int64_t @ 0x400d53
afvr rdi arg1 int64_t @ 0x400d53
axc 0x400d8b 0x400d66
axC 0x4007b8 0x400d7d
axc 0x400d92 0x400d89
axc 0x400dc8 0x400d90
axC 0x4007a8 0x400dae
axc 0x400dc5 0x400dbc
afS 40 @ 0x400d53
"f sym.imp.atoi 6 0x004007e8"
"af+ 0x004007e8 sym.imp.atoi f n"
afb+ 0x004007e8 0x004007e8 6 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x004007e8
afc amd64 @ 0x004007e8
axc 0x601fe8 0x4007e8
afS 0 @ 0x4007e8
"f sym.imp.__stack_chk_fail 6 0x00400798"
"af+ 0x00400798 sym.imp.__stack_chk_fail f n"
afb+ 0x00400798 0x00400798 6 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400798
afc amd64 @ 0x00400798
axc 0x601f98 0x400798
afS 0 @ 0x400798
"f sym..plt.got 6 0x00400780"
"af+ 0x00400780 sym..plt.got s n"
afb+ 0x00400780 0x00400780 6 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400780
afc amd64 @ 0x00400780
axc 0x601f80 0x400780
afS 0 @ 0x400780
"f sym._fini 9 0x00400eb4"
"af+ 0x00400eb4 sym._fini s n"
afb+ 0x00400eb4 0x00400eb4 9 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400eb4
afc amd64 @ 0x00400eb4
afS 8 @ 0x400eb4
"f sym.find_list 83 0x00400d00"
"af+ 0x00400d00 sym.find_list s n"
afb+ 0x00400d00 0x00400d00 25 0x00400d45 0xffffffffffffffff
afb+ 0x00400d00 0x00400d19 26 0x00400d39 0x00400d33
afb+ 0x00400d00 0x00400d33 6 0x00400d51 0xffffffffffffffff
afb+ 0x00400d00 0x00400d39 12 0x00400d45 0xffffffffffffffff
afb+ 0x00400d00 0x00400d45 7 0x00400d19 0x00400d4c
afb+ 0x00400d00 0x00400d4c 5 0x00400d51 0xffffffffffffffff
afb+ 0x00400d00 0x00400d51 2 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400d00
afc amd64 @ 0x00400d00
afvb -24 var_18h int64_t @ 0x400d00
afvb -8 var_8h uint32_t @ 0x400d00
afvr rdi arg1 int64_t @ 0x400d00
axd 0x602028 0x400d0c
axc 0x400d45 0x400d17
axC 0x400788 0x400d2a
axc 0x400d39 0x400d31
axc 0x400d51 0x400d37
axc 0x400d19 0x400d4a
afS 40 @ 0x400d00
"f sym.vote 453 0x00400a51"
"af+ 0x00400a51 sym.vote s n"
afb+ 0x00400a51 0x00400a51 38 0x00400a86 0x00400a77
afb+ 0x00400a51 0x00400a77 15 0x00400c00 0xffffffffffffffff
afb+ 0x00400a51 0x00400a86 63 0x00400b08 0x00400ac5
afb+ 0x00400a51 0x00400ac5 23 0x00400b01 0xffffffffffffffff
afb+ 0x00400a51 0x00400adc 37 0x00400b01 0xffffffffffffffff
afb+ 0x00400a51 0x00400b01 7 0x00400adc 0x00400b08
afb+ 0x00400a51 0x00400b08 53 0x00400ba6 0x00400b3d
afb+ 0x00400a51 0x00400b3d 27 0x00400bff 0x00400b58
afb+ 0x00400a51 0x00400b58 53 0x00400c00 0x00400b8d
afb+ 0x00400a51 0x00400b8d 25 0x00400c00 0xffffffffffffffff
afb+ 0x00400a51 0x00400ba6 25 0x00400bd8 0x00400bbf
afb+ 0x00400a51 0x00400bbf 25 0x00400c00 0xffffffffffffffff
afb+ 0x00400a51 0x00400bd8 39 0x00400c00 0xffffffffffffffff
afb+ 0x00400a51 0x00400bff 1 0x00400c00 0xffffffffffffffff
afb+ 0x00400a51 0x00400c00 15 0x00400c14 0x00400c0f
afb+ 0x00400a51 0x00400c0f 5 0x00400c14 0xffffffffffffffff
afb+ 0x00400a51 0x00400c14 2 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400a51
afc amd64 @ 0x00400a51
afvb -72 var_48h uint32_t @ 0x400a51
afvb -64 var_40h int64_t @ 0x400a51
afvb -32 var_20h int64_t @ 0x400a51
afvb -24 var_18h int64_t @ 0x400a51
afvb -8 var_8h int64_t @ 0x400a51
axd 0x602010 0x400a6c
axc 0x400a86 0x400a75
axd 0x400f88 0x400a77
axC 0x400790 0x400a7c
axc 0x400c00 0x400a81
axd 0x602010 0x400a86
axd 0x400fa7 0x400a90
axC 0x4007b0 0x400a9a
axC 0x400d53 0x400aab
axd 0x400fbf 0x400ab4
axC 0x400788 0x400abc
axc 0x400b08 0x400ac3
axd 0x400fc1 0x400ac5
axC 0x400790 0x400aca
axd 0x602028 0x400acf
axc 0x400b01 0x400ada
axd 0x400fcd 0x400ae6
axC 0x4007b0 0x400af0
axc 0x400adc 0x400b06
axd 0x400fd8 0x400b08
axC 0x4007b0 0x400b12
axC 0x400d53 0x400b23
axd 0x400ffd 0x400b2c
axC 0x400788 0x400b34
axc 0x400ba6 0x400b3b
axd 0x401004 0x400b3d
axC 0x400d00 0x400b42
axc 0x400bff 0x400b52
axd 0x401010 0x400b58
axC 0x4007b0 0x400b62
axC 0x400d53 0x400b73
axd 0x40105a 0x400b7c
axC 0x400788 0x400b84
axc 0x400c00 0x400b8b
axc 0x400c00 0x400ba4
axC 0x400d00 0x400bad
axc 0x400bd8 0x400bbd
axc 0x400c00 0x400bd6
axd 0x40105e 0x400bdf
axC 0x4007b0 0x400be9
axd 0x602030 0x400bee
axd 0x602030 0x400bf7
axc 0x400c00 0x400bfd
axc 0x400c14 0x400c0d
axC 0x400798 0x400c0f
afS 88 @ 0x400a51
"f sym.init 44 0x004008f6"
"af+ 0x004008f6 sym.init s n"
afb+ 0x004008f6 0x004008f6 44 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x004008f6
afc amd64 @ 0x004008f6
axd 0x602018 0x4008fa
axC 0x4007a0 0x400909
axC 0x4007d8 0x400913
axC 0x4007c8 0x40091a
afS 8 @ 0x4008f6
"f fcn.004007a0 6 0x004007a0"
"af+ 0x004007a0 fcn.004007a0 f n"
afb+ 0x004007a0 0x004007a0 6 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x004007a0
afc amd64 @ 0x004007a0
axc 0x601fa0 0x4007a0
afS 0 @ 0x4007a0
"f sym.imp.time 6 0x004007d8"
"af+ 0x004007d8 sym.imp.time f n"
afb+ 0x004007d8 0x004007d8 6 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x004007d8
afc amd64 @ 0x004007d8
axc 0x601fd8 0x4007d8
afS 0 @ 0x4007d8
"f sym.imp.srand 6 0x004007c8"
"af+ 0x004007c8 sym.imp.srand f n"
afb+ 0x004007c8 0x004007c8 6 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x004007c8
afc amd64 @ 0x004007c8
axc 0x601fc8 0x4007c8
afS 0 @ 0x4007c8
"f sym.__libc_csu_init 101 0x00400e40"
"af+ 0x00400e40 sym.__libc_csu_init s n"
afb+ 0x00400e40 0x00400e40 54 0x00400e96 0x00400e76
afb+ 0x00400e40 0x00400e76 10 0x00400e80 0xffffffffffffffff
afb+ 0x00400e40 0x00400e80 22 0x00400e80 0x00400e96
afb+ 0x00400e40 0x00400e96 15 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400e40
afc amd64 @ 0x00400e40
afvr rdx arg3 int64_t @ 0x400e40
afvr rsi arg2 int64_t @ 0x400e40
afvr rdi arg1 int64_t @ 0x400e40
axd 0x601d88 0x400e4b
axd 0x601d98 0x400e53
axC 0x400750 0x400e6c
axc 0x400e96 0x400e74
axc 0x400e80 0x400e94
afS 56 @ 0x400e40
"f sym.result 113 0x00400c16"
"af+ 0x00400c16 sym.result s n"
afb+ 0x00400c16 0x00400c16 31 0x00400c61 0xffffffffffffffff
afb+ 0x00400c16 0x00400c35 44 0x00400c61 0xffffffffffffffff
afb+ 0x00400c16 0x00400c61 7 0x00400c35 0x00400c68
afb+ 0x00400c16 0x00400c68 31 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400c16
afc amd64 @ 0x00400c16
afvb -8 var_8h uint32_t @ 0x400c16
axd 0x602010 0x400c1e
axd 0x602028 0x400c28
axc 0x400c61 0x400c33
axd 0x401077 0x400c46
axC 0x4007b0 0x400c50
axc 0x400c35 0x400c66
axd 0x602030 0x400c68
axd 0x401082 0x400c70
axd 0x401077 0x400c75
axC 0x4007b0 0x400c7f
afS 24 @ 0x400c16
"f main 145 0x00400922"
"af+ 0x00400922 main s n"
afb+ 0x00400922 0x00400922 50 0x0040098f 0xffffffffffffffff
afb+ 0x00400922 0x00400954 8 0x0040096d 0x0040095c
afb+ 0x00400922 0x0040095c 5 0x00400974 0x00400961
afb+ 0x00400922 0x00400961 5 0x0040097b 0x00400966
afb+ 0x00400922 0x00400966 7 0x00400985 0xffffffffffffffff
afb+ 0x00400922 0x0040096d 7 0x00400985 0xffffffffffffffff
afb+ 0x00400922 0x00400974 7 0x00400985 0xffffffffffffffff
afb+ 0x00400922 0x0040097b 10 0x00400985 0xffffffffffffffff
afb+ 0x00400922 0x00400985 10 0x0040098f 0xffffffffffffffff
afb+ 0x00400922 0x0040098f 14 0x00400954 0x0040099d
afb+ 0x00400922 0x0040099d 22 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400922
afc amd64 @ 0x00400922
afvb -4 var_4h uint32_t @ 0x400922
axd 0x400ec8 0x40092a
axC 0x400790 0x40092f
axd 0x400ed9 0x400934
axC 0x400c87 0x400939
axd 0x400ee1 0x40093e
axC 0x400c87 0x400943
axd 0x400eeb 0x400948
axC 0x400c87 0x40094d
axc 0x40098f 0x400952
axc 0x40096d 0x40095a
axc 0x400974 0x40095f
axc 0x40097b 0x400964
axC 0x4009e1 0x400966
axc 0x400985 0x40096b
axC 0x400a51 0x40096d
axc 0x400985 0x400972
axC 0x400c16 0x400974
axc 0x400985 0x400979
axd 0x400ef1 0x40097b
axC 0x400790 0x400980
axd 0x400f02 0x400985
axC 0x400790 0x40098a
axC 0x4009b3 0x40098f
axc 0x400954 0x40099b
axd 0x400f08 0x40099d
axC 0x4007b0 0x4009a7
afS 24 @ 0x400922
"f sym.stand 112 0x004009e1"
"af+ 0x004009e1 sym.stand s n"
afb+ 0x004009e1 0x004009e1 34 0x00400a0f 0x00400a03
afb+ 0x004009e1 0x00400a03 12 0x00400a3b 0xffffffffffffffff
afb+ 0x004009e1 0x00400a0f 44 0x00400a3b 0xffffffffffffffff
afb+ 0x004009e1 0x00400a3b 15 0x00400a4f 0x00400a4a
afb+ 0x004009e1 0x00400a4a 5 0x00400a4f 0xffffffffffffffff
afb+ 0x004009e1 0x00400a4f 2 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x004009e1
afc amd64 @ 0x004009e1
afvb -48 var_30h int64_t @ 0x4009e1
afvb -8 var_8h int64_t @ 0x4009e1
axd 0x602010 0x4009f8
axc 0x400a0f 0x400a01
axd 0x400f50 0x400a03
axC 0x400790 0x400a08
axc 0x400a3b 0x400a0d
axd 0x400f72 0x400a0f
axC 0x4007b0 0x400a19
axC 0x400d53 0x400a2a
axC 0x400c87 0x400a36
axc 0x400a4f 0x400a48
axC 0x400798 0x400a4a
afS 56 @ 0x4009e1
"f sym._init 26 0x00400750"
"af+ 0x00400750 sym._init s n"
afb+ 0x00400750 0x00400750 16 0x00400765 0x00400760
afb+ 0x00400750 0x00400760 5 0x00400765 0xffffffffffffffff
afb+ 0x00400750 0x00400765 5 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400750
afc amd64 @ 0x00400750
axd 0x601fd0 0x400754
axc 0x400765 0x40075e
axC 0x4007d0 0x400760
afS 8 @ 0x400750
"f fcn.004007d0 6 0x004007d0"
"af+ 0x004007d0 fcn.004007d0 f n"
afb+ 0x004007d0 0x004007d0 6 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x004007d0
afc amd64 @ 0x004007d0
axc 0x601fd0 0x4007d0
afS 0 @ 0x4007d0
"f puts 6 0x00400790"
"af+ 0x00400790 puts f n"
afb+ 0x00400790 0x00400790 6 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400790
afc amd64 @ 0x00400790
axc 0x601f90 0x400790
afS 0 @ 0x400790
"f sym.imp.strcasecmp 6 0x00400788"
"af+ 0x00400788 sym.imp.strcasecmp f n"
afb+ 0x00400788 0x00400788 6 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00400788
afc amd64 @ 0x00400788
axc 0x601f88 0x400788
afS 0 @ 0x400788
"f sym.imp.read 6 0x004007b8"
"af+ 0x004007b8 sym.imp.read f n"
afb+ 0x004007b8 0x004007b8 6 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x004007b8
afc amd64 @ 0x004007b8
axc 0x601fb8 0x4007b8
afS 0 @ 0x4007b8
"f sym.imp.strchr 6 0x004007a8"
"af+ 0x004007a8 sym.imp.strchr f n"
afb+ 0x004007a8 0x004007a8 6 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x004007a8
afc amd64 @ 0x004007a8
axc 0x601fa8 0x4007a8
afS 0 @ 0x4007a8

# flags
fs sections
f section. 0 0x00000000 
f section..comment 52 0x00000000 
f section..shstrtab 254 0x00000000 
f section..symtab 2184 0x00000000 
f section..strtab 872 0x00000000 
fs segments
f segment.GNU_STACK 0 0x00000000 
fs symbols.sections
f sym..comment 0 0x00000000 
fs imports
f loc.imp.__gmon_start 16 0x00000000 
f sym.imp.puts 16 0x00000000 
f sym.imp.srand 16 0x00000000 
f sym.imp.putchar 16 0x00000000 
f sym.imp.setbuf 16 0x00000000 
f sym.imp.printf 16 0x00000000 
f sym.imp.time 16 0x00000000 
f sym.imp.__libc_start_main 16 0x00000000 
f sym.imp.atoi 16 0x00000000 
f sym.imp.read 16 0x00000000 
f sym.imp.rand 16 0x00000000 
f sym.imp.strchr 16 0x00000000 
f sym.imp.malloc 16 0x00000000 
f sym.imp.strcasecmp 16 0x00000000 
f sym.imp.__stack_chk_fail 16 0x00000000 
f sym.imp.strdup 16 0x00000000 
fs *
f rax 8 0x00000000 
fs *
f rbx 8 0x00000000 
fs *
f rcx 8 0x00000000 
fs *
f rdx 8 0x00000000 
fs *
f rsi 8 0x00000000 
fs *
f rdi 8 0x00000000 
fs *
f r8 8 0x00000000 
fs *
f r9 8 0x00000000 
fs *
f r10 8 0x00000000 
fs *
f r11 8 0x00000000 
fs *
f r12 8 0x00000000 
fs *
f r13 8 0x00000000 
fs *
f r14 8 0x00000000 
fs *
f r15 8 0x00000000 
fs *
f rflags 8 0x00000000 
fs symbols
f sym.crtstuff.c 0 0x00000000 
f sym.election.c 0 0x00000000 
fs imports
f sym.imp.__gmon_start 16 0x00000000 
fs symbols
f sym..interp 0 0x00000238 
f sym..note.ABI_tag 0 0x00000254 
f sym..note.gnu.build_id 0 0x00000274 
f sym..gnu.hash 0 0x00000298 
f sym..dynsym 0 0x00000308 
f sym..dynstr 0 0x000004b8 
f sym..gnu.version 0 0x00000562 
f sym..gnu.version_r 0 0x00000588 
f sym..rela.dyn 0 0x000005b8 
f sym..init 0 0x00000750 
f sym._init 0 0x00000750 
f sym..plt 0 0x00000770 
f sym..plt.got 0 0x00000780 
f sym..text 0 0x00000800 
f sym._start 42 0x00000800 
f sym.deregister_tm_clones 0 0x00000830 
f sym.register_tm_clones 0 0x00000870 
f sym.__do_global_dtors_aux 0 0x000008b0 
f sym.frame_dummy 0 0x000008d0 
f sym.init 44 0x000008f6 
f sym.main 145 0x00000922 
f sym.menu 46 0x000009b3 
f sym.stand 112 0x000009e1 
f sym.vote 453 0x00000a51 
f sym.result 113 0x00000c16 
f sym.add_list 121 0x00000c87 
f sym.find_list 83 0x00000d00 
f sym.getnline 119 0x00000d53 
f sym.getint 106 0x00000dca 
f sym.__libc_csu_init 101 0x00000e40 
f sym.__libc_csu_fini 2 0x00000eb0 
f sym..fini 0 0x00000eb4 
f sym._fini 0 0x00000eb4 
f sym..rodata 0 0x00000ec0 
f sym._IO_stdin_used 4 0x00000ec0 
f sym..eh_frame_hdr 0 0x0000108c 
f sym.__GNU_EH_FRAME_HDR 0 0x0000108c 
f sym..eh_frame 0 0x00001108 
f sym.__FRAME_END 0 0x00001318 
fs *
f rbp 8 0x00178000 
fs *
f rsp 8 0x00178000 
fs symbols
f sym..init_array 0 0x00201d88 
f sym.__frame_dummy_init_array_entry 0 0x00201d88 
f sym.__init_array_start 0 0x00201d88 
f sym..fini_array 0 0x00201d98 
f sym.__do_global_dtors_aux_fini_array_entry 0 0x00201d98 
f sym.__init_array_end 0 0x00201d98 
f sym..jcr 0 0x00201da0 
f sym.__JCR_LIST 0 0x00201da0 
f sym.__JCR_END 0 0x00201da0 
f sym..dynamic 0 0x00201da8 
f sym._DYNAMIC 0 0x00201da8 
f sym..got 0 0x00201f68 
f sym._GLOBAL_OFFSET_TABLE 0 0x00201f68 
f sym..data 0 0x00202000 
f sym.data_start 0 0x00202000 
f sym.__data_start 0 0x00202000 
f sym.__dso_handle 0 0x00202008 
f sym.lv 4 0x00202010 
fs segments
f segment.LOAD0 4892 0x00400000 
f segment.ehdr 64 0x00400000 
f segment.PHDR 504 0x00400040 
fs sections
f section..interp 28 0x00400238 
fs segments
f segment.INTERP 28 0x00400238 
fs sections
f section..note.ABI_tag 32 0x00400254 
fs segments
f segment.NOTE 68 0x00400254 
fs sections
f section..note.gnu.build_id 36 0x00400274 
f section..gnu.hash 108 0x00400298 
f section..dynsym 432 0x00400308 
f section..dynstr 170 0x004004b8 
f section..gnu.version 36 0x00400562 
f section..gnu.version_r 48 0x00400588 
f section..rela.dyn 408 0x004005b8 
f section..init 26 0x00400750 
f section..plt 16 0x00400770 
f section..plt.got 128 0x00400780 
fs functions
f fcn.00400788 6 0x00400788 
f puts 6 0x00400790 
f fcn.00400798 6 0x00400798 
f fcn.004007a0 6 0x004007a0 
f fcn.004007a8 6 0x004007a8 
f printf 6 0x004007b0 
f fcn.004007b8 6 0x004007b8 
f fcn.004007c0 6 0x004007c0 
f fcn.004007c8 6 0x004007c8 
f fcn.004007d0 6 0x004007d0 
f fcn.004007d8 6 0x004007d8 
f malloc 6 0x004007e0 
f fcn.004007e8 6 0x004007e8 
f fcn.004007f0 6 0x004007f0 
f fcn.004007f8 6 0x004007f8 
fs symbols
f entry0 42 0x00400800 
fs sections
f section..text 1714 0x00400800 
fs *
f rip 8 0x00400800 
fs symbols
f entry.fini0 1 0x004008b0 
f entry.init0 38 0x004008d0 
f entry.init1 1 0x004008f6 
f main 145 0x00400922 
fs sections
f section..fini 9 0x00400eb4 
f section..rodata 458 0x00400ec0 
fs symbols
f obj._IO_stdin_used 4 0x00400ec0 
fs strings
f str.Election 17 0x00400ec8 
f str.Tatsumi 8 0x00400ed9 
f str.Shinonome 10 0x00400ee1 
f str.Ojima 6 0x00400eeb 
f str.Invalid_input... 17 0x00400ef1 
f str.done. 6 0x00400f02 
f str.Thank_you 12 0x00400f08 
f str.1._stand__2._vote__3._result__0._eat_chocolate 49 0x00400f18 
f str.The_candidacy_has_already_closed. 34 0x00400f50 
f str.Enter_the_name. 20 0x00400f72 
f str.The_voting_has_already_closed. 31 0x00400f88 
f str.Show_candidates___Y_n 24 0x00400fa7 
f str.Candidates: 12 0x00400fc1 
f str.s 6 0x00400fcd 
f str.Enter_the_name_of_the_candidate. 37 0x00400fd8 
f str.oshima 7 0x00400ffd 
f str.ojima 6 0x00401004 
f str.I_m_not__Oshima___but__Ojima____Would_you_modify_the_name_and_re_vote 74 0x00401010 
f str.s__is_invalid_vote_: 25 0x0040105e 
f str.11s_:__d 11 0x00401077 
f str.INVALID 8 0x00401082 
fs sections
f section..eh_frame_hdr 124 0x0040108c 
fs segments
f segment.GNU_EH_FRAME 124 0x0040108c 
fs symbols
f loc.__GNU_EH_FRAME_HDR 0 0x0040108c 
fs sections
f section..eh_frame 532 0x00401108 
fs symbols
f obj.__FRAME_END 0 0x00401318 
fs sections
f section..init_array 16 0x00601d88 
fs segments
f segment.LOAD1 688 0x00601d88 
f segment.GNU_RELRO 632 0x00601d88 
fs symbols
f obj.__frame_dummy_init_array_entry 0 0x00601d88 
f loc.__init_array_start 0 0x00601d88 
fs sections
f section..fini_array 8 0x00601d98 
fs symbols
f obj.__do_global_dtors_aux_fini_array_entry 0 0x00601d98 
f loc.__init_array_end 0 0x00601d98 
fs sections
f section..jcr 8 0x00601da0 
fs symbols
f obj.__JCR_LIST 0 0x00601da0 
f obj.__JCR_END 0 0x00601da0 
fs sections
f section..dynamic 448 0x00601da8 
fs segments
f segment.DYNAMIC 448 0x00601da8 
fs symbols
f obj._DYNAMIC 0 0x00601da8 
fs sections
f section..got 152 0x00601f68 
fs symbols
f obj._GLOBAL_OFFSET_TABLE 0 0x00601f68 
fs relocs
f reloc.putchar 8 0x00601f80 
f reloc.strcasecmp 8 0x00601f88 
f reloc.puts 8 0x00601f90 
f reloc.__stack_chk_fail 8 0x00601f98 
f reloc.setbuf 8 0x00601fa0 
f reloc.strchr 8 0x00601fa8 
f reloc.printf 8 0x00601fb0 
f reloc.read 8 0x00601fb8 
f reloc.__libc_start_main 8 0x00601fc0 
f reloc.srand 8 0x00601fc8 
f reloc.__gmon_start 8 0x00601fd0 
f reloc.time 8 0x00601fd8 
f reloc.malloc 8 0x00601fe0 
f reloc.atoi 8 0x00601fe8 
f reloc.strdup 8 0x00601ff0 
f reloc.rand 8 0x00601ff8 
fs sections
f section..data 20 0x00602000 
fs symbols
f loc.data_start 0 0x00602000 
f loc.__data_start 0 0x00602000 
f obj.__dso_handle 0 0x00602008 
f obj.lv 4 0x00602010 
f loc._edata 0 0x00602014 
f loc.__bss_start 0 0x00602014 
f sym._edata 0 0x00602014 
f sym.__bss_start 0 0x00602014 
fs sections
f section..bss 32 0x00602018 
fs relocs
f reloc.stdout 8 0x00602018 
fs symbols
f obj.stdout 8 0x00602018 
fs symbols.sections
f sym..bss 0 0x00602018 
fs symbols
f obj.stdout__GLIBC_2.2.5 8 0x00602018 
f obj.__TMC_END 0 0x00602018 
f sym.stdout 8 0x00602018 
f sym.stdout__GLIBC_2.2.5 8 0x00602018 
f sym.__TMC_END 0 0x00602018 
f obj.completed.7585 1 0x00602020 
f sym.completed.7585 1 0x00602020 
f obj.list 8 0x00602028 
f sym.list 8 0x00602028 
f obj.inv_votes 4 0x00602030 
f sym.inv_votes 4 0x00602030 
f loc._end 0 0x00602038 
f sym._end 0 0x00602038 
"obf /home/muwa00/p1tfall/ctf-writeups/others/seccon-2017/election/election"
"ofs \"/home/muwa00/p1tfall/ctf-writeups/others/seccon-2017/election/election\" r-x"
om 3 0x601d88 0x28c 0x1d88 r-- fmap.LOAD1
om 3 0x400000 0x131c 0x0 r-x fmap.LOAD0
om 3 0x601d88 0x28c 0x1d88 r-- fmap.LOAD1
om 3 0x400000 0x131c 0x0 r-x fmap.LOAD0
"obf null://36"
"ofs \"null://36\" rw-"
om 4 0x602014 0x24 0x0 rw- mmap.LOAD1
om 4 0x602014 0x24 0x0 rw- mmap.LOAD1
"obf election"
"ofs \"election\" r-x"
om 5 0x100000 0xf0000 0x0 r-- mem.0x100000_0xf0000
"obf null://36"
"ofs \"null://36\" rw-"
"obf malloc://983040"
"ofs \"malloc://983040\" rw-"
# meta
CCu base64:WzI4XSAtLS0tIHNlY3Rpb24gc2l6ZSA4NzIgbmFtZWQgLnN0cnRhYg== @ 0x00000000
CCu base64:WzAxXSAtci0tIHNlY3Rpb24gc2l6ZSAyOCBuYW1lZCAuaW50ZXJw @ 0x00400238
CCu base64:WzAyXSAtci0tIHNlY3Rpb24gc2l6ZSAzMiBuYW1lZCAubm90ZS5BQklfdGFn @ 0x00400254
CCu base64:WzAzXSAtci0tIHNlY3Rpb24gc2l6ZSAzNiBuYW1lZCAubm90ZS5nbnUuYnVpbGRfaWQ= @ 0x00400274
CCu base64:WzA0XSAtci0tIHNlY3Rpb24gc2l6ZSAxMDggbmFtZWQgLmdudS5oYXNo @ 0x00400298
CCu base64:WzA1XSAtci0tIHNlY3Rpb24gc2l6ZSA0MzIgbmFtZWQgLmR5bnN5bQ== @ 0x00400308
CCu base64:WzA2XSAtci0tIHNlY3Rpb24gc2l6ZSAxNzAgbmFtZWQgLmR5bnN0cg== @ 0x004004b8
CCu base64:WzA3XSAtci0tIHNlY3Rpb24gc2l6ZSAzNiBuYW1lZCAuZ251LnZlcnNpb24= @ 0x00400562
CCu base64:WzA4XSAtci0tIHNlY3Rpb24gc2l6ZSA0OCBuYW1lZCAuZ251LnZlcnNpb25fcg== @ 0x00400588
Cd 8 @ 0x004005b8
CCu base64:WzA5XSAtci0tIHNlY3Rpb24gc2l6ZSA0MDggbmFtZWQgLnJlbGEuZHlu @ 0x004005b8
Cd 8 @ 0x004005c0
Cd 8 @ 0x004005c8
Cd 8 @ 0x004005d0
Cd 8 @ 0x004005d8
Cd 8 @ 0x004005e0
Cd 8 @ 0x004005e8
Cd 8 @ 0x004005f0
Cd 8 @ 0x004005f8
Cd 8 @ 0x00400600
Cd 8 @ 0x00400608
Cd 8 @ 0x00400610
Cd 8 @ 0x00400618
Cd 8 @ 0x00400620
Cd 8 @ 0x00400628
Cd 8 @ 0x00400630
Cd 8 @ 0x00400638
Cd 8 @ 0x00400640
Cd 8 @ 0x00400648
Cd 8 @ 0x00400650
Cd 8 @ 0x00400658
Cd 8 @ 0x00400660
Cd 8 @ 0x00400668
Cd 8 @ 0x00400670
Cd 8 @ 0x00400678
Cd 8 @ 0x00400680
Cd 8 @ 0x00400688
Cd 8 @ 0x00400690
Cd 8 @ 0x00400698
Cd 8 @ 0x004006a0
Cd 8 @ 0x004006a8
Cd 8 @ 0x004006b0
Cd 8 @ 0x004006b8
Cd 8 @ 0x004006c0
Cd 8 @ 0x004006c8
Cd 8 @ 0x004006d0
Cd 8 @ 0x004006d8
Cd 8 @ 0x004006e0
Cd 8 @ 0x004006e8
Cd 8 @ 0x004006f0
Cd 8 @ 0x004006f8
Cd 8 @ 0x00400700
Cd 8 @ 0x00400708
Cd 8 @ 0x00400710
Cd 8 @ 0x00400718
Cd 8 @ 0x00400720
Cd 8 @ 0x00400728
Cd 8 @ 0x00400730
Cd 8 @ 0x00400738
Cd 8 @ 0x00400740
Cd 8 @ 0x00400748
CCu base64:WzEwXSAtci14IHNlY3Rpb24gc2l6ZSAyNiBuYW1lZCAuaW5pdA== @ 0x00400750
CCu base64:WzExXSAtci14IHNlY3Rpb24gc2l6ZSAxNiBuYW1lZCAucGx0 @ 0x00400770
CCu base64:WzEyXSAtci14IHNlY3Rpb24gc2l6ZSAxMjggbmFtZWQgLnBsdC5nb3Q= @ 0x00400780
CCu base64:WzEzXSAtci14IHNlY3Rpb24gc2l6ZSAxNzE0IG5hbWVkIC50ZXh0 @ 0x00400800
Ct arg3 @ 0x00400802
Ct arg1 @ 0x00400c8f
Ct arg1 @ 0x00400d08
Ct arg1 @ 0x00400d5b
Ct arg2 @ 0x00400d5f
Ct signed int64_t arg2 @ 0x00400e05
Ct int64_t arg1 @ 0x00400e0a
Ct arg1 @ 0x00400e44
Ct arg2 @ 0x00400e5b
Ct arg3 @ 0x00400e5e
CCu base64:WzE0XSAtci14IHNlY3Rpb24gc2l6ZSA5IG5hbWVkIC5maW5p @ 0x00400eb4
CCu base64:WzE1XSAtci0tIHNlY3Rpb24gc2l6ZSA0NTggbmFtZWQgLnJvZGF0YQ== @ 0x00400ec0
Cs 17 @ 0x00400ec8 # *** Election ***
Cs 8 @ 0x00400ed9 # Tatsumi
Cs 10 @ 0x00400ee1 # Shinonome
Cs 6 @ 0x00400eeb # Ojima
Cs 17 @ 0x00400ef1 # Invalid input...
Cs 6 @ 0x00400f02 # done.
Cs 12 @ 0x00400f08 # Thank you!!
Cs 49 @ 0x00400f18 # \n1. stand\n2. vote\n3. result\n0. eat chocolate\n>> 
Cs 34 @ 0x00400f50 # The candidacy has already closed.
Cs 20 @ 0x00400f72 # Enter the name.\n>> 
Cs 31 @ 0x00400f88 # The voting has already closed.
Cs 24 @ 0x00400fa7 # Show candidates? (Y/n) n
Cs 12 @ 0x00400fc1 # Candidates:
Cs 6 @ 0x00400fcd # * %s\n
Cs 37 @ 0x00400fd8 # Enter the name of the candidate.\n>> 
Cs 7 @ 0x00400ffd # oshima
Cs 6 @ 0x00401004 # ojima
Cs 74 @ 0x00401010 # I'm not 'Oshima', but 'Ojima'!\nWould you modify the name and re-vote?\n>> 
Cs 25 @ 0x0040105e # '%s' is invalid vote :(\n
Cs 11 @ 0x00401077 # %11s : %d\n
Cs 8 @ 0x00401082 # INVALID
CCu base64:WzE2XSAtci0tIHNlY3Rpb24gc2l6ZSAxMjQgbmFtZWQgLmVoX2ZyYW1lX2hkcg== @ 0x0040108c
CCu base64:WzE3XSAtci0tIHNlY3Rpb24gc2l6ZSA1MzIgbmFtZWQgLmVoX2ZyYW1l @ 0x00401108
Cd 8 @ 0x00601d88
CCu base64:WzE4XSAtcnctIHNlY3Rpb24gc2l6ZSAxNiBuYW1lZCAuaW5pdF9hcnJheQ== @ 0x00601d88
Cd 8 @ 0x00601d90
Cd 8 @ 0x00601d98
CCu base64:WzE5XSAtcnctIHNlY3Rpb24gc2l6ZSA4IG5hbWVkIC5maW5pX2FycmF5 @ 0x00601d98
CCu base64:WzIwXSAtcnctIHNlY3Rpb24gc2l6ZSA4IG5hbWVkIC5qY3I= @ 0x00601da0
Cd 8 @ 0x00601da8
CCu base64:WzIxXSAtcnctIHNlY3Rpb24gc2l6ZSA0NDggbmFtZWQgLmR5bmFtaWM= @ 0x00601da8
Cd 8 @ 0x00601db0
Cd 8 @ 0x00601db8
Cd 8 @ 0x00601dc0
Cd 8 @ 0x00601dc8
Cd 8 @ 0x00601dd0
Cd 8 @ 0x00601dd8
Cd 8 @ 0x00601de0
Cd 8 @ 0x00601de8
Cd 8 @ 0x00601df0
Cd 8 @ 0x00601df8
Cd 8 @ 0x00601e00
Cd 8 @ 0x00601e08
Cd 8 @ 0x00601e10
Cd 8 @ 0x00601e18
Cd 8 @ 0x00601e20
Cd 8 @ 0x00601e28
Cd 8 @ 0x00601e30
Cd 8 @ 0x00601e38
Cd 8 @ 0x00601e40
Cd 8 @ 0x00601e48
Cd 8 @ 0x00601e50
Cd 8 @ 0x00601e58
Cd 8 @ 0x00601e60
Cd 8 @ 0x00601e68
Cd 8 @ 0x00601e70
Cd 8 @ 0x00601e78
Cd 8 @ 0x00601e80
Cd 8 @ 0x00601e88
Cd 8 @ 0x00601e90
Cd 8 @ 0x00601e98
Cd 8 @ 0x00601ea0
Cd 8 @ 0x00601ea8
Cd 8 @ 0x00601eb0
Cd 8 @ 0x00601eb8
Cd 8 @ 0x00601ec0
Cd 8 @ 0x00601ec8
Cd 8 @ 0x00601ed0
Cd 8 @ 0x00601ed8
Cd 8 @ 0x00601ee0
Cd 8 @ 0x00601ee8
Cd 8 @ 0x00601ef0
Cd 8 @ 0x00601ef8
Cd 8 @ 0x00601f00
Cd 8 @ 0x00601f08
Cd 8 @ 0x00601f10
Cd 8 @ 0x00601f18
Cd 8 @ 0x00601f20
Cd 8 @ 0x00601f28
Cd 8 @ 0x00601f30
Cd 8 @ 0x00601f38
Cd 8 @ 0x00601f40
Cd 8 @ 0x00601f48
Cd 8 @ 0x00601f50
Cd 8 @ 0x00601f58
Cd 8 @ 0x00601f60
Cd 8 @ 0x00601f68
CCu base64:WzIyXSAtcnctIHNlY3Rpb24gc2l6ZSAxNTIgbmFtZWQgLmdvdA== @ 0x00601f68
Cd 8 @ 0x00601f70
Cd 8 @ 0x00601f78
Cd 8 @ 0x00601f80
Cd 8 @ 0x00601f88
Cd 8 @ 0x00601f90
Cd 8 @ 0x00601f98
Cd 8 @ 0x00601fa0
Cd 8 @ 0x00601fa8
Cd 8 @ 0x00601fb0
Cd 8 @ 0x00601fb8
Cd 8 @ 0x00601fc0
Cd 8 @ 0x00601fc8
Cd 8 @ 0x00601fd0
Cd 8 @ 0x00601fd8
Cd 8 @ 0x00601fe0
Cd 8 @ 0x00601fe8
Cd 8 @ 0x00601ff0
Cd 8 @ 0x00601ff8
CCu base64:WzIzXSAtcnctIHNlY3Rpb24gc2l6ZSAyMCBuYW1lZCAuZGF0YQ== @ 0x00602000
CCu base64:WzI0XSAtcnctIHNlY3Rpb24gc2l6ZSAzMiBuYW1lZCAuYnNz @ 0x00602018
Cd 8 @ 0x00602018
axc 0x400047 0x400000
axc 0x4001b2 0x4001b0
axc 0x4001ba 0x4001b8
axc 0x400268 0x400202
axd 0x40020d 0x400208
axd 0x400276 0x400210
axd 0x40027e 0x400218
axc 0x400224 0x400220
axc 0x40022c 0x400228
axc 0x400275 0x400246
axc 0x400282 0x400248
axc 0x400218 0x400286
axc 0x40030d 0x4002cb
axc 0x40034d 0x4002cf
axc 0x400313 0x4002d4
axc 0x400295 0x4002d7
axc 0x400289 0x4002e9
axc 0x40032a 0x4002eb
axc 0x4002a8 0x4002ff
axc 0x40052f 0x4004bd
axc 0x400540 0x4004cb
axc 0x40054b 0x4004d5
axc 0x4004ec 0x4004ea
axc 0x400562 0x4004ec
axc 0x400554 0x4004ee
axc 0x400562 0x4004f0
axc 0x400579 0x400503
axc 0x400574 0x40050f
axc 0x400579 0x400512
axc 0x400518 0x400516
axc 0x40058a 0x400519
axc 0x40058a 0x400526
axc 0x400590 0x400528
axc 0x4005ab 0x400535
axc 0x4005ba 0x400544
axc 0x4005bd 0x400547
axc 0x4005c4 0x4005a8
axd 0x4005e0 0x4005db
axd 0x4006a0 0x40069b
axd 0x601fd0 0x400754
axc 0x400765 0x40075e
axC 0x4007d0 0x400760
axc 0x601f78 0x400776
axc 0x601f80 0x400780
axc 0x601f88 0x400788
axc 0x601f90 0x400790
axc 0x601f98 0x400798
axc 0x601fa0 0x4007a0
axc 0x601fa8 0x4007a8
axc 0x601fb0 0x4007b0
axc 0x601fb8 0x4007b8
axc 0x601fc0 0x4007c0
axc 0x601fc8 0x4007c8
axc 0x601fd0 0x4007d0
axc 0x601fd8 0x4007d8
axc 0x601fe0 0x4007e0
axc 0x601fe8 0x4007e8
axc 0x601ff0 0x4007f0
axc 0x601ff8 0x4007f8
axd 0x400eb0 0x40080f
axd 0x400e40 0x400816
axd 0x400922 0x40081d
axC 0x4007c0 0x400824
axd 0x60201f 0x400830
axd 0x602018 0x400836
axc 0x400860 0x400843
axc 0x400860 0x40084d
axd 0x602018 0x400850
axd 0x602018 0x400870
axd 0x602018 0x400876
axc 0x4008a8 0x400891
axc 0x4008a8 0x40089b
axd 0x602018 0x40089e
axd 0x602020 0x4008b0
axc 0x4008ca 0x4008b7
axC 0x400830 0x4008bd
axd 0x602020 0x4008c3
axd 0x601da0 0x4008d0
axc 0x4008e0 0x4008d9
axc 0x400870 0x4008db
axc 0x4008db 0x4008e8
axc 0x400870 0x4008f1
axd 0x602018 0x4008fa
axC 0x4007a0 0x400909
axC 0x4007d8 0x400913
axC 0x4007c8 0x40091a
axd 0x400ec8 0x40092a
axC 0x400790 0x40092f
axd 0x400ed9 0x400934
axC 0x400c87 0x400939
axd 0x400ee1 0x40093e
axC 0x400c87 0x400943
axd 0x400eeb 0x400948
axC 0x400c87 0x40094d
axc 0x40098f 0x400952
axc 0x40096d 0x40095a
axc 0x400974 0x40095f
axc 0x40097b 0x400964
axC 0x4009e1 0x400966
axc 0x400985 0x40096b
axC 0x400a51 0x40096d
axc 0x400985 0x400972
axC 0x400c16 0x400974
axc 0x400985 0x400979
axd 0x400ef1 0x40097b
axC 0x400790 0x400980
axd 0x400f02 0x400985
axC 0x400790 0x40098a
axC 0x4009b3 0x40098f
axc 0x400954 0x40099b
axd 0x400f08 0x40099d
axC 0x4007b0 0x4009a7
axd 0x400f18 0x4009bb
axC 0x4007b0 0x4009c5
axC 0x400dca 0x4009ca
axC 0x400780 0x4009d7
axd 0x602010 0x4009f8
axc 0x400a0f 0x400a01
axd 0x400f50 0x400a03
axC 0x400790 0x400a08
axc 0x400a3b 0x400a0d
axd 0x400f72 0x400a0f
axC 0x4007b0 0x400a19
axC 0x400d53 0x400a2a
axC 0x400c87 0x400a36
axc 0x400a4f 0x400a48
axC 0x400798 0x400a4a
axd 0x602010 0x400a6c
axc 0x400a86 0x400a75
axd 0x400f88 0x400a77
axC 0x400790 0x400a7c
axc 0x400c00 0x400a81
axd 0x602010 0x400a86
axd 0x400fa7 0x400a90
axC 0x4007b0 0x400a9a
axC 0x400d53 0x400aab
axd 0x400fbf 0x400ab4
axC 0x400788 0x400abc
axc 0x400b08 0x400ac3
axd 0x400fc1 0x400ac5
axC 0x400790 0x400aca
axd 0x602028 0x400acf
axc 0x400b01 0x400ada
axd 0x400fcd 0x400ae6
axC 0x4007b0 0x400af0
axc 0x400adc 0x400b06
axd 0x400fd8 0x400b08
axC 0x4007b0 0x400b12
axC 0x400d53 0x400b23
axd 0x400ffd 0x400b2c
axC 0x400788 0x400b34
axc 0x400ba6 0x400b3b
axd 0x401004 0x400b3d
axC 0x400d00 0x400b42
axc 0x400bff 0x400b52
axd 0x401010 0x400b58
axC 0x4007b0 0x400b62
axC 0x400d53 0x400b73
axd 0x40105a 0x400b7c
axC 0x400788 0x400b84
axc 0x400c00 0x400b8b
axc 0x400c00 0x400ba4
axC 0x400d00 0x400bad
axc 0x400bd8 0x400bbd
axc 0x400c00 0x400bd6
axd 0x40105e 0x400bdf
axC 0x4007b0 0x400be9
axd 0x602030 0x400bee
axd 0x602030 0x400bf7
axc 0x400c00 0x400bfd
axc 0x400c14 0x400c0d
axC 0x400798 0x400c0f
axd 0x602010 0x400c1e
axd 0x602028 0x400c28
axc 0x400c61 0x400c33
axd 0x401077 0x400c46
axC 0x4007b0 0x400c50
axc 0x400c35 0x400c66
axd 0x602030 0x400c68
axd 0x401082 0x400c70
axd 0x401077 0x400c75
axC 0x4007b0 0x400c7f
axC 0x4007e0 0x400c98
axC 0x4007f0 0x400ca8
axC 0x4007f8 0x400cb7
axd 0x602028 0x400ce3
axd 0x602028 0x400cf6
axd 0x602028 0x400d0c
axc 0x400d45 0x400d17
axC 0x400788 0x400d2a
axc 0x400d39 0x400d31
axc 0x400d51 0x400d37
axc 0x400d19 0x400d4a
axc 0x400d8b 0x400d66
axC 0x4007b8 0x400d7d
axc 0x400d92 0x400d89
axc 0x400dc8 0x400d90
axC 0x4007a8 0x400dae
axc 0x400dc5 0x400dbc
axC 0x400d53 0x400e0d
axC 0x4007e8 0x400e19
axc 0x400e32 0x400e2b
axC 0x400798 0x400e2d
axd 0x601d88 0x400e4b
axd 0x601d98 0x400e53
axC 0x400750 0x400e6c
axc 0x400e96 0x400e74
axc 0x400e80 0x400e94
axc 0x400f3b 0x400ed0
axc 0x400f53 0x400edc
axc 0x400f33 0x400f10
axc 0x400f8e 0x400f27
axc 0x400fa6 0x400f2f
axc 0x400f3e 0x400f32
axc 0x400f5b 0x400f39
axc 0x400fa9 0x400f42
axc 0x400f82 0x400f60
axc 0x400fcb 0x400f64
axc 0x400f8a 0x400f67
axc 0x400fd4 0x400f6d
axc 0x400fdb 0x400f74
axc 0x400f98 0x400f76
axc 0x400fe2 0x400f78
axc 0x400ff9 0x400f8e
axc 0x400fb7 0x400f95
axc 0x401000 0x400f99
axc 0x400fbf 0x400f9c
axc 0x401009 0x400fa2
axc 0x400fcc 0x400faa
axc 0x401041 0x400fda
axc 0x400ffe 0x400fdc
axc 0x401048 0x400fde
axc 0x401068 0x400ffe
axc 0x401038 0x401016
axc 0x401084 0x401019
axc 0x401099 0x401023
axc 0x40109f 0x401031
axc 0x401059 0x401037
axc 0x4010c1 0x40105a
axc 0x40105e 0x40105c
axc 0x401086 0x401064
axc 0x4010d7 0x401070
axc 0x401127 0x401115
axc 0x401157 0x401145
axc 0x401246 0x401244
axc 0x4012fa 0x4012ea
ahb 64 @ 0x400750
ahb 64 @ 0x40076a
ahb 64 @ 0x400780
ahb 64 @ 0x400786
ahb 64 @ 0x400788
ahb 64 @ 0x40078e
ahb 64 @ 0x400790
ahb 64 @ 0x400796
ahb 64 @ 0x400798
ahb 64 @ 0x40079e
ahb 64 @ 0x4007a0
ahb 64 @ 0x4007a6
ahb 64 @ 0x4007a8
ahb 64 @ 0x4007ae
ahb 64 @ 0x4007b0
ahb 64 @ 0x4007b6
ahb 64 @ 0x4007b8
ahb 64 @ 0x4007be
ahb 64 @ 0x4007c0
ahb 64 @ 0x4007c6
ahb 64 @ 0x4007c8
ahb 64 @ 0x4007ce
ahb 64 @ 0x4007d0
ahb 64 @ 0x4007d6
ahb 64 @ 0x4007d8
ahb 64 @ 0x4007de
ahb 64 @ 0x4007e0
ahb 64 @ 0x4007e6
ahb 64 @ 0x4007e8
ahb 64 @ 0x4007ee
ahb 64 @ 0x4007f0
ahb 64 @ 0x4007f6
ahb 64 @ 0x4007f8
ahb 64 @ 0x4007fe
ahb 64 @ 0x400800
ahb 64 @ 0x40082a
ahb 64 @ 0x400830
ahb 64 @ 0x400862
ahb 64 @ 0x400870
ahb 64 @ 0x4008aa
ahb 64 @ 0x4008b0
ahb 64 @ 0x4008cc
ahb 64 @ 0x4008d0
ahb 64 @ 0x4008f6
ahb 64 @ 0x400922
ahb 64 @ 0x4009b3
ahb 64 @ 0x4009e1
ahb 64 @ 0x400a51
ahb 64 @ 0x400c16
ahb 64 @ 0x400c87
ahb 64 @ 0x400d00
ahb 64 @ 0x400d53
ahb 64 @ 0x400dca
ahb 64 @ 0x400e34
ahb 64 @ 0x400e40
ahb 64 @ 0x400ea5
ahb 64 @ 0x400eb0
ahb 64 @ 0x400eb2
ahb 64 @ 0x400eb4
ahb 64 @ 0x400ebd
# types
tk *aligned_alloc=func
tk _Exit=func
tk __assert_fail=func
tk __bzero=func
tk __cxa_throw=func
tk __error=func
tk __libc_init=func
tk __libc_init_array=func
tk __libc_start_main=func
tk __maskrune=func
tk __stack_chk_fail=func
tk __tolower=func
tk __toupper=func
tk __uClibc_main=func
tk _exit=func
tk abort=func
tk abs=func
tk access=func
tk acos=func
tk acosf=func
tk acosh=func
tk acoshf=func
tk acoshl=func
tk acosl=func
tk arc4random=func
tk asctime=func
tk asin=func
tk asinf=func
tk asinh=func
tk asinhf=func
tk asinhl=func
tk asinl=func
tk at_quick_exit=func
tk atan=func
tk atan2=func
tk atan2f=func
tk atan2l=func
tk atanf=func
tk atanh=func
tk atanhf=func
tk atanhl=func
tk atanl=func
tk atexit=func
tk atof=func
tk atoi=func
tk atol=func
tk atoll=func
tk basename=func
tk bind=func
tk bindtextdomain=func
tk bsearch=func
tk btowc=func
tk bzero=func
tk calloc=func
tk cbrt=func
tk cbrtf=func
tk cbrtl=func
tk ceil=func
tk ceilf=func
tk ceill=func
tk char=type
tk char *=type
tk chmod=func
tk clearerr=func
tk clock=func
tk close=func
tk compat_mode=func
tk connect=func
tk copysign=func
tk copysignf=func
tk copysignl=func
tk cos=func
tk cosf=func
tk cosh=func
tk coshf=func
tk coshl=func
tk cosl=func
tk ctime=func
tk difftime=func
tk div=func
tk double=type
tk erf=func
tk erfc=func
tk erfcf=func
tk erfcl=func
tk erff=func
tk erfl=func
tk err=func
tk errc=func
tk error=func
tk errx=func
tk exit=func
tk exp=func
tk exp2=func
tk exp2f=func
tk exp2l=func
tk expf=func
tk expl=func
tk expm1=func
tk expm1f=func
tk expm1l=func
tk fabs=func
tk fabsf=func
tk fabsl=func
tk fchmod=func
tk fclose=func
tk fdim=func
tk fdimf=func
tk fdiml=func
tk feclearexcept=func
tk fegetenv=func
tk fegetexceptflag=func
tk fegetround=func
tk feholdexcept=func
tk feof=func
tk feraiseexcept=func
tk ferror=func
tk fesetenv=func
tk fesetexceptflag=func
tk fesetround=func
tk fetestexcept=func
tk feupdateenv=func
tk fflush=func
tk fgetc=func
tk fgetpos=func
tk fgets=func
tk fgetwc=func
tk fgetws=func
tk fileno=func
tk float=type
tk floor=func
tk floorf=func
tk floorl=func
tk fma=func
tk fmaf=func
tk fmal=func
tk fmax=func
tk fmaxf=func
tk fmaxl=func
tk fmin=func
tk fminf=func
tk fminl=func
tk fmod=func
tk fmodf=func
tk fmodl=func
tk fopen=func
tk fpclassify=func
tk fprintf=func
tk fputc=func
tk fputs=func
tk fputwc=func
tk fputws=func
tk fread=func
tk free=func
tk freopen=func
tk frexp=func
tk frexpf=func
tk frexpl=func
tk fscanf=func
tk fseek=func
tk fsetpos=func
tk fstat=func
tk ftell=func
tk fts_children_INODE64=func
tk fts_close_INODE64=func
tk fts_open_INODE64=func
tk fts_read_INODE64=func
tk fts_set_INODE64=func
tk func.*aligned_alloc.arg.0=size_t,alignment
tk func.*aligned_alloc.arg.1=size_t,size
tk func.*aligned_alloc.args=2
tk func.*aligned_alloc.ret=void
tk func._Exit.arg.0=int,status
tk func._Exit.args=1
tk func._Exit.noreturn=true
tk func._Exit.ret=void
tk func.__assert_fail.arg.0=const char *,assertion
tk func.__assert_fail.arg.1=const char *,file
tk func.__assert_fail.arg.2=unsigned int,line
tk func.__assert_fail.arg.3=const char *,function
tk func.__assert_fail.args=4
tk func.__assert_fail.noreturn=true
tk func.__assert_fail.ret=void
tk func.__bzero.arg.0=void *,s
tk func.__bzero.arg.1=size_t,n
tk func.__bzero.args=2
tk func.__bzero.ret=void
tk func.__cxa_throw.arg.0=void *,thrown_exception
tk func.__cxa_throw.arg.1=struct std::type_info *,tinfo
tk func.__cxa_throw.arg.2=void *,dest
tk func.__cxa_throw.args=3
tk func.__cxa_throw.noreturn=true
tk func.__cxa_throw.ret=void
tk func.__error.arg.0=int,status
tk func.__error.arg.1=int,errname
tk func.__error.arg.2=char *,format
tk func.__error.args=3
tk func.__error.ret=void
tk func.__libc_init.arg.0=int,argc
tk func.__libc_init.arg.1=char **,argv
tk func.__libc_init.arg.2=char **,envp
tk func.__libc_init.args=3
tk func.__libc_init.noreturn=true
tk func.__libc_init.ret=void
tk func.__libc_init_array.args=0
tk func.__libc_init_array.ret=void
tk func.__libc_start_main.arg.0=func,main
tk func.__libc_start_main.arg.1=int,argc
tk func.__libc_start_main.arg.2=char **,ubp_av
tk func.__libc_start_main.arg.3=func,init
tk func.__libc_start_main.arg.4=func,fini
tk func.__libc_start_main.arg.5=func,rtld_fini
tk func.__libc_start_main.arg.6=void *,stack_end
tk func.__libc_start_main.args=7
tk func.__libc_start_main.noreturn=true
tk func.__libc_start_main.ret=int
tk func.__maskrune.arg.0=long,c
tk func.__maskrune.arg.1=long,f
tk func.__maskrune.args=2
tk func.__maskrune.ret=int
tk func.__stack_chk_fail.args=0
tk func.__stack_chk_fail.noreturn=true
tk func.__stack_chk_fail.ret=void
tk func.__tolower.arg.0=int,c
tk func.__tolower.args=1
tk func.__tolower.ret=int
tk func.__toupper.arg.0=int,c
tk func.__toupper.args=1
tk func.__toupper.ret=int
tk func.__uClibc_main.arg.0=func,main
tk func.__uClibc_main.arg.1=int,argc
tk func.__uClibc_main.arg.2=char **,argv
tk func.__uClibc_main.arg.3=func,app_init
tk func.__uClibc_main.arg.4=func,app_fini
tk func.__uClibc_main.arg.5=func,rtld_fini
tk func.__uClibc_main.arg.6=void *,stack_end
tk func.__uClibc_main.args=7
tk func.__uClibc_main.noreturn=true
tk func.__uClibc_main.ret=int
tk func._exit.arg.0=int,status
tk func._exit.args=1
tk func._exit.noreturn=true
tk func._exit.ret=void
tk func.abort.args=0
tk func.abort.noreturn=true
tk func.abort.ret=void
tk func.abs.arg.0=int,j
tk func.abs.args=1
tk func.abs.ret=int
tk func.access.arg.0=const char *,path
tk func.access.arg.1=int,mode
tk func.access.args=2
tk func.access.ret=int
tk func.acos.arg.0=arithmetic,x
tk func.acos.args=1
tk func.acos.ret=floating_point
tk func.acosf.arg.0=float,x
tk func.acosf.args=1
tk func.acosf.ret=float
tk func.acosh.arg.0=arithmetic,x
tk func.acosh.args=1
tk func.acosh.ret=floating_point
tk func.acoshf.arg.0=float,x
tk func.acoshf.args=1
tk func.acoshf.ret=float
tk func.acoshl.arg.0=long double,x
tk func.acoshl.args=1
tk func.acoshl.ret=long double
tk func.acosl.arg.0=long double,x
tk func.acosl.args=1
tk func.acosl.ret=long double
tk func.arc4random.args=0
tk func.arc4random.ret=uint32_t
tk func.asctime.arg.0=const tm *,timeptr
tk func.asctime.args=1
tk func.asctime.ret=char *
tk func.asin.arg.0=arithmetic,x
tk func.asin.args=1
tk func.asin.ret=floating_point
tk func.asinf.arg.0=float,x
tk func.asinf.args=1
tk func.asinf.ret=float
tk func.asinh.arg.0=arithmetic,x
tk func.asinh.args=1
tk func.asinh.ret=floating_point
tk func.asinhf.arg.0=float,x
tk func.asinhf.args=1
tk func.asinhf.ret=float
tk func.asinhl.arg.0=long double,x
tk func.asinhl.args=1
tk func.asinhl.ret=long double
tk func.asinl.arg.0=long double,x
tk func.asinl.args=1
tk func.asinl.ret=long double
tk func.at_quick_exit.args=0
tk func.at_quick_exit.ret=int
tk func.atan.arg.0=arithmetic,x
tk func.atan.args=1
tk func.atan.ret=floating_point
tk func.atan2.arg.0=arithmetic,y
tk func.atan2.arg.1=arithmetic,x
tk func.atan2.args=2
tk func.atan2.ret=floating_point
tk func.atan2f.arg.0=float,y
tk func.atan2f.arg.1=float,x
tk func.atan2f.args=2
tk func.atan2f.ret=float
tk func.atan2l.arg.0=long double,y
tk func.atan2l.arg.1=long double,x
tk func.atan2l.args=2
tk func.atan2l.ret=long double
tk func.atanf.arg.0=float,x
tk func.atanf.args=1
tk func.atanf.ret=float
tk func.atanh.arg.0=arithmetic,x
tk func.atanh.args=1
tk func.atanh.ret=floating_point
tk func.atanhf.arg.0=float,x
tk func.atanhf.args=1
tk func.atanhf.ret=float
tk func.atanhl.arg.0=long double,x
tk func.atanhl.args=1
tk func.atanhl.ret=long double
tk func.atanl.arg.0=long double,x
tk func.atanl.args=1
tk func.atanl.ret=long double
tk func.atexit.arg.0=func,function
tk func.atexit.args=1
tk func.atexit.ret=int
tk func.atof.arg.0=const char *,str
tk func.atof.args=1
tk func.atof.ret=double
tk func.atoi.arg.0=const char *,str
tk func.atoi.args=1
tk func.atoi.ret=int
tk func.atol.arg.0=const char *,str
tk func.atol.args=1
tk func.atol.ret=long
tk func.atoll.arg.0=const char *,str
tk func.atoll.args=1
tk func.atoll.ret=long long
tk func.basename.arg.0=char *,path
tk func.basename.args=1
tk func.basename.ret=char *
tk func.bind.arg.0=int,socket
tk func.bind.arg.1=struct sockaddr*,address
tk func.bind.arg.2=socklen_t,address_len
tk func.bind.args=3
tk func.bind.ret=int
tk func.bindtextdomain.arg.0=char *,domainname
tk func.bindtextdomain.arg.1=char *,dirname
tk func.bindtextdomain.args=2
tk func.bindtextdomain.ret=char *
tk func.bsearch.arg.0=const void *,key
tk func.bsearch.arg.1=const void *,base
tk func.bsearch.arg.2=size_t,nmemb
tk func.bsearch.arg.3=size_t,size
tk func.bsearch.arg.4=int,(*compar)(const void *,const void *)
tk func.bsearch.args=5
tk func.btowc.arg.0=int,c
tk func.btowc.args=1
tk func.btowc.ret=wint_t
tk func.bzero.arg.0=void *,s
tk func.bzero.arg.1=size_t,n
tk func.bzero.args=2
tk func.bzero.ret=void
tk func.calloc.arg.0=size_t,nmeb
tk func.calloc.arg.1=size_t,size
tk func.calloc.args=2
tk func.calloc.ret=void *
tk func.cbrt.arg.0=arithmetic,x
tk func.cbrt.args=1
tk func.cbrt.ret=floating_point
tk func.cbrtf.arg.0=float,x
tk func.cbrtf.args=1
tk func.cbrtf.ret=float
tk func.cbrtl.arg.0=long double,x
tk func.cbrtl.args=1
tk func.cbrtl.ret=long double
tk func.ceil.arg.0=arithmetic,x
tk func.ceil.args=1
tk func.ceil.ret=floating_point
tk func.ceilf.arg.0=float,x
tk func.ceilf.args=1
tk func.ceilf.ret=float
tk func.ceill.arg.0=long double,x
tk func.ceill.args=1
tk func.ceill.ret=long double
tk func.chmod.arg.0=const char *,path
tk func.chmod.arg.1=int,mode
tk func.chmod.args=2
tk func.chmod.ret=int
tk func.clearerr.arg.0=FILE *,stream
tk func.clearerr.args=1
tk func.clearerr.ret=void
tk func.clock.args=0
tk func.clock.ret=clock_t
tk func.close.arg.0=int,fildes
tk func.close.args=1
tk func.close.ret=int
tk func.compat_mode.arg.0=const char *,function
tk func.compat_mode.arg.1=const char *,mode
tk func.compat_mode.args=2
tk func.compat_mode.ret=bool
tk func.connect.arg.0=int,socket
tk func.connect.arg.1=void *,addr
tk func.connect.arg.2=size_t,addrlen
tk func.connect.args=3
tk func.connect.ret=ssize_t
tk func.copysign.arg.0=arithmetic,x
tk func.copysign.arg.1=arithmetic,y
tk func.copysign.args=2
tk func.copysign.ret=floating_point
tk func.copysignf.arg.0=float,x
tk func.copysignf.arg.1=float,y
tk func.copysignf.args=2
tk func.copysignf.ret=float
tk func.copysignl.arg.0=long double,x
tk func.copysignl.arg.1=long double,y
tk func.copysignl.args=2
tk func.copysignl.ret=long double
tk func.cos.arg.0=arithmetic,x
tk func.cos.args=1
tk func.cos.ret=floating_point
tk func.cosf.arg.0=float,x
tk func.cosf.args=1
tk func.cosf.ret=float
tk func.cosh.arg.0=arithmetic,x
tk func.cosh.args=1
tk func.cosh.ret=floating_point
tk func.coshf.arg.0=float,x
tk func.coshf.args=1
tk func.coshf.ret=float
tk func.coshl.arg.0=long double,x
tk func.coshl.args=1
tk func.coshl.ret=long double
tk func.cosl.arg.0=long double,x
tk func.cosl.args=1
tk func.cosl.ret=long double
tk func.ctime.arg.0=const time_t *,timer
tk func.ctime.args=1
tk func.ctime.ret=char *
tk func.difftime.arg.0=time_t,time1
tk func.difftime.arg.1=time_t,time0
tk func.difftime.args=2
tk func.difftime.ret=double
tk func.div.arg.0=int,numer
tk func.div.arg.1=int,denom
tk func.div.args=2
tk func.div.ret=div_t
tk func.entry0.arg.0=int64_t,arg3
tk func.entry0.args=1
tk func.erf.arg.0=arithmetic,x
tk func.erf.args=1
tk func.erf.ret=floating_point
tk func.erfc.arg.0=arithmetic,x
tk func.erfc.args=1
tk func.erfc.ret=floating_point
tk func.erfcf.arg.0=float,x
tk func.erfcf.args=1
tk func.erfcf.ret=float
tk func.erfcl.arg.0=long double,x
tk func.erfcl.args=1
tk func.erfcl.ret=long double
tk func.erff.arg.0=float,x
tk func.erff.args=1
tk func.erff.ret=float
tk func.erfl.arg.0=long double,x
tk func.erfl.args=1
tk func.erfl.ret=long double
tk func.err.arg.0=int,eval
tk func.err.arg.1=const char *,fmt
tk func.err.args=1
tk func.err.noreturn=true
tk func.err.ret=void
tk func.errc.arg.0=int,eval
tk func.errc.arg.1=int,code
tk func.errc.arg.2=const char *,fmt
tk func.errc.args=1
tk func.errc.noreturn=true
tk func.errc.ret=void
tk func.error.arg.0=int,status
tk func.error.arg.1=int,errname
tk func.error.arg.2=char *,format
tk func.error.args=3
tk func.error.ret=void
tk func.errx.arg.0=int,eval
tk func.errx.arg.1=const char *,fmt
tk func.errx.args=1
tk func.errx.noreturn=true
tk func.errx.ret=void
tk func.exit.arg.0=int,status
tk func.exit.args=1
tk func.exit.noreturn=true
tk func.exit.ret=void
tk func.exp.arg.0=arithmetic,x
tk func.exp.args=1
tk func.exp.ret=floating_point
tk func.exp2.arg.0=arithmetic,x
tk func.exp2.args=1
tk func.exp2.ret=floating_point
tk func.exp2f.arg.0=float,x
tk func.exp2f.args=1
tk func.exp2f.ret=float
tk func.exp2l.arg.0=long double,x
tk func.exp2l.args=1
tk func.exp2l.ret=long double
tk func.expf.arg.0=float,x
tk func.expf.args=1
tk func.expf.ret=float
tk func.expl.arg.0=long double,x
tk func.expl.args=1
tk func.expl.ret=long double
tk func.expm1.arg.0=arithmetic,x
tk func.expm1.args=1
tk func.expm1.ret=floating_point
tk func.expm1f.arg.0=float,x
tk func.expm1f.args=1
tk func.expm1f.ret=float
tk func.expm1l.arg.0=long double,x
tk func.expm1l.args=1
tk func.expm1l.ret=long double
tk func.fabs.arg.0=arithmetic,x
tk func.fabs.args=1
tk func.fabs.ret=floating_point
tk func.fabsf.arg.0=float,x
tk func.fabsf.args=1
tk func.fabsf.ret=float
tk func.fabsl.arg.0=long double,x
tk func.fabsl.args=1
tk func.fabsl.ret=long double
tk func.fchmod.arg.0=int,fd
tk func.fchmod.arg.1=int,mode
tk func.fchmod.args=2
tk func.fchmod.ret=int
tk func.fclose.arg.0=FILE *,stream
tk func.fclose.args=1
tk func.fclose.ret=int
tk func.fdim.arg.0=arithmetic,x
tk func.fdim.arg.1=arithmetic,y
tk func.fdim.args=2
tk func.fdim.ret=floating_point
tk func.fdimf.arg.0=float,x
tk func.fdimf.arg.1=float,y
tk func.fdimf.args=2
tk func.fdimf.ret=float
tk func.fdiml.arg.0=long double,x
tk func.fdiml.arg.1=long double,y
tk func.fdiml.args=2
tk func.fdiml.ret=long double
tk func.feclearexcept.arg.0=int,excepts
tk func.feclearexcept.args=1
tk func.feclearexcept.ret=int
tk func.fegetenv.arg.0=fenv_t *,envp
tk func.fegetenv.args=1
tk func.fegetenv.ret=int
tk func.fegetexceptflag.arg.0=fexcept_t *,flagp
tk func.fegetexceptflag.arg.1=int,excepts
tk func.fegetexceptflag.args=2
tk func.fegetexceptflag.ret=int
tk func.fegetround.args=0
tk func.fegetround.ret=int
tk func.feholdexcept.arg.0=fenv_t *,envp
tk func.feholdexcept.args=1
tk func.feholdexcept.ret=int
tk func.feof.arg.0=FILE *,stream
tk func.feof.args=1
tk func.feof.ret=int
tk func.feraiseexcept.arg.0=int,excepts
tk func.feraiseexcept.args=1
tk func.feraiseexcept.ret=int
tk func.ferror.arg.0=FILE *,stream
tk func.ferror.args=1
tk func.ferror.ret=int
tk func.fesetenv.arg.0=const,fenv_t*
tk func.fesetenv.args=1
tk func.fesetenv.ret=int
tk func.fesetexceptflag.arg.0=const,fexcept_t*
tk func.fesetexceptflag.arg.1=int,excepts
tk func.fesetexceptflag.args=2
tk func.fesetexceptflag.ret=int
tk func.fesetround.arg.0=int,round
tk func.fesetround.args=1
tk func.fesetround.ret=int
tk func.fetestexcept.arg.0=int,excepts
tk func.fetestexcept.args=1
tk func.fetestexcept.ret=int
tk func.feupdateenv.arg.0=const,fenv_t*
tk func.feupdateenv.args=1
tk func.feupdateenv.ret=int
tk func.fflush.arg.0=FILE *,stream
tk func.fflush.args=1
tk func.fflush.ret=int
tk func.fgetc.arg.0=FILE *,stream
tk func.fgetc.args=1
tk func.fgetc.ret=int
tk func.fgetpos.arg.0=FILE *,stream
tk func.fgetpos.arg.1=fpos_t*,pos
tk func.fgetpos.args=2
tk func.fgetpos.ret=int
tk func.fgets.arg.0=char *,s
tk func.fgets.arg.1=int,size
tk func.fgets.arg.2=FILE *,stream
tk func.fgets.args=3
tk func.fgets.ret=char *
tk func.fgetwc.arg.0=FILE *,stream
tk func.fgetwc.args=1
tk func.fgetwc.ret=wint_t
tk func.fgetws.arg.0=wchar_t *,s
tk func.fgetws.arg.1=int,n
tk func.fgetws.arg.2=FILE *,stream
tk func.fgetws.args=3
tk func.fgetws.ret=wchar_t*
tk func.fileno.arg.0=FILE *,stream
tk func.fileno.args=1
tk func.fileno.ret=int
tk func.floor.arg.0=arithmetic,x
tk func.floor.args=1
tk func.floor.ret=floating_point
tk func.floorf.arg.0=float,x
tk func.floorf.args=1
tk func.floorf.ret=float
tk func.floorl.arg.0=long double,x
tk func.floorl.args=1
tk func.floorl.ret=long double
tk func.fma.arg.0=arithmetic,x
tk func.fma.arg.1=arithmetic,y
tk func.fma.arg.2=arithmetic,z
tk func.fma.args=3
tk func.fma.ret=floating_point
tk func.fmaf.arg.0=float,x
tk func.fmaf.arg.1=float,y
tk func.fmaf.arg.2=float,z
tk func.fmaf.args=3
tk func.fmaf.ret=float
tk func.fmal.arg.0=long double,x
tk func.fmal.arg.1=long double,y
tk func.fmal.arg.2=long double,z
tk func.fmal.args=3
tk func.fmal.ret=long double
tk func.fmax.arg.0=arithmetic,x
tk func.fmax.arg.1=arithmetic,y
tk func.fmax.args=2
tk func.fmax.ret=floating_point
tk func.fmaxf.arg.0=float,x
tk func.fmaxf.arg.1=float,y
tk func.fmaxf.args=2
tk func.fmaxf.ret=float
tk func.fmaxl.arg.0=long double,x
tk func.fmaxl.arg.1=long double,y
tk func.fmaxl.args=2
tk func.fmaxl.ret=long double
tk func.fmin.arg.0=arithmetic,x
tk func.fmin.arg.1=arithmetic,y
tk func.fmin.args=2
tk func.fmin.ret=floating_point
tk func.fminf.arg.0=float,x
tk func.fminf.arg.1=float,y
tk func.fminf.args=2
tk func.fminf.ret=float
tk func.fminl.arg.0=long double,x
tk func.fminl.arg.1=long double,y
tk func.fminl.args=2
tk func.fminl.ret=long double
tk func.fmod.arg.0=arithmetic,x
tk func.fmod.arg.1=arithmetic,y
tk func.fmod.args=2
tk func.fmod.ret=floating_point
tk func.fmodf.arg.0=float,x
tk func.fmodf.arg.1=float,y
tk func.fmodf.args=2
tk func.fmodf.ret=float
tk func.fmodl.arg.0=long double,x
tk func.fmodl.arg.1=long double,y
tk func.fmodl.args=2
tk func.fmodl.ret=long double
tk func.fopen.arg.0=const char *,filename
tk func.fopen.arg.1=const char *,mode
tk func.fopen.args=2
tk func.fopen.ret=file*
tk func.fpclassify.arg.0=arithmetic,x
tk func.fpclassify.args=1
tk func.fpclassify.ret=int
tk func.fprintf.arg.0=FILE *,stream
tk func.fprintf.arg.1=const char *,format
tk func.fprintf.arg.2=,...
tk func.fprintf.args=3
tk func.fprintf.ret=int
tk func.fputc.arg.0=int,c
tk func.fputc.arg.1=FILE *,stream
tk func.fputc.args=2
tk func.fputc.ret=int
tk func.fputs.arg.0=const char *,s
tk func.fputs.arg.1=FILE *,stream
tk func.fputs.args=2
tk func.fputs.ret=int
tk func.fputwc.arg.0=wchar_t,c
tk func.fputwc.arg.1=FILE *,stream
tk func.fputwc.args=2
tk func.fputwc.ret=wint_t
tk func.fputws.arg.0=const wchar_t *,s
tk func.fputws.arg.1=FILE *,stream
tk func.fputws.args=2
tk func.fputws.ret=int
tk func.fread.arg.0=void *,ptr
tk func.fread.arg.1=size_t,size
tk func.fread.arg.2=size_t,nmemb
tk func.fread.arg.3=FILE *,stream
tk func.fread.args=4
tk func.fread.ret=size_t
tk func.free.arg.0=void *,ptr
tk func.free.args=1
tk func.free.ret=void
tk func.freopen.arg.0=const char *,filename
tk func.freopen.arg.1=const char *,mode
tk func.freopen.arg.2=FILE *,stream
tk func.freopen.args=3
tk func.freopen.ret=file*
tk func.frexp.arg.0=arithmetic,value
tk func.frexp.arg.1=int *,exp
tk func.frexp.args=2
tk func.frexp.ret=floating_point
tk func.frexpf.arg.0=float,value
tk func.frexpf.arg.1=int *,exp
tk func.frexpf.args=2
tk func.frexpf.ret=float
tk func.frexpl.arg.0=long double,value
tk func.frexpl.arg.1=int *,exp
tk func.frexpl.args=2
tk func.frexpl.ret=long double
tk func.fscanf.arg.0=FILE *,stream
tk func.fscanf.arg.1=const char *,format
tk func.fscanf.arg.2=,...
tk func.fscanf.args=3
tk func.fscanf.ret=int
tk func.fseek.arg.0=FILE *,stream
tk func.fseek.arg.1=long,offset
tk func.fseek.arg.2=int,whence
tk func.fseek.args=3
tk func.fseek.ret=int
tk func.fsetpos.arg.0=FILE *,stream
tk func.fsetpos.arg.1=const fpos_t*,pos
tk func.fsetpos.args=2
tk func.fsetpos.ret=int
tk func.fstat.arg.0=int,fildes
tk func.fstat.arg.1=void *,buf
tk func.fstat.args=2
tk func.fstat.ret=int
tk func.ftell.arg.0=FILE *,stream
tk func.ftell.args=1
tk func.ftell.ret=long
tk func.fts_children_INODE64.arg.0=void*,ftsp
tk func.fts_children_INODE64.arg.1=int,opotions
tk func.fts_children_INODE64.args=2
tk func.fts_children_INODE64.ret=void *
tk func.fts_close_INODE64.arg.0=void*,ftsp
tk func.fts_close_INODE64.args=1
tk func.fts_close_INODE64.ret=int
tk func.fts_open_INODE64.arg.0=const char *,path_argv
tk func.fts_open_INODE64.arg.1=int,options
tk func.fts_open_INODE64.arg.2=void *,compar
tk func.fts_open_INODE64.arg.3=void *,ftsen$INODE64t
tk func.fts_open_INODE64.args=4
tk func.fts_open_INODE64.ret=void *
tk func.fts_read_INODE64.arg.0=void*,ftsp
tk func.fts_read_INODE64.args=1
tk func.fts_read_INODE64.ret=void *
tk func.fts_set_INODE64.arg.0=void*,ftsp
tk func.fts_set_INODE64.arg.1=void*,f
tk func.fts_set_INODE64.arg.2=int,options
tk func.fts_set_INODE64.args=3
tk func.fts_set_INODE64.ret=int
tk func.fwide.arg.0=FILE *,stream
tk func.fwide.arg.1=int,mode
tk func.fwide.args=2
tk func.fwide.ret=int
tk func.fwprintf.arg.0=FILE *,stream
tk func.fwprintf.arg.1=const wchar_t *,format
tk func.fwprintf.args=2
tk func.fwprintf.ret=int
tk func.fwrite.arg.0=const void *,ptr
tk func.fwrite.arg.1=size_t,size
tk func.fwrite.arg.2=size_t,nitems
tk func.fwrite.arg.3=FILE *,stream
tk func.fwrite.args=4
tk func.fwrite.ret=size_t
tk func.fwscanf.arg.0=FILE *,stream
tk func.fwscanf.arg.1=const wchar_t *,format
tk func.fwscanf.args=2
tk func.fwscanf.ret=int
tk func.getc.arg.0=FILE *,stream
tk func.getc.args=1
tk func.getc.ret=int
tk func.getchar.args=0
tk func.getchar.ret=int
tk func.getenv.arg.0=const char *,name
tk func.getenv.args=1
tk func.getenv.ret=char *
tk func.geteuid.args=0
tk func.geteuid.ret=uid_t
tk func.getopt.arg.0=int,argc
tk func.getopt.arg.1=const char * *,argv
tk func.getopt.arg.2=const char *,optstring
tk func.getopt.args=3
tk func.getopt.ret=int
tk func.getpid.args=0
tk func.getpid.ret=int
tk func.getprogname.args=0
tk func.getprogname.ret=const char *
tk func.gets.arg.0=char *,s
tk func.gets.args=1
tk func.gets.ret=char *
tk func.getsockname.arg.0=int,sockfd
tk func.getsockname.arg.1=struct sockaddr *,addr
tk func.getsockname.arg.2=socklen_t *,addrlen
tk func.getsockname.args=3
tk func.getsockname.ret=int
tk func.getsockopt.arg.0=int,sockfd
tk func.getsockopt.arg.1=int,level
tk func.getsockopt.arg.2=int,optname
tk func.getsockopt.arg.3=void *,optval
tk func.getsockopt.arg.4=socklen_t *,optlen
tk func.getsockopt.args=5
tk func.getsockopt.ret=int
tk func.getuid.args=0
tk func.getuid.ret=uid_t
tk func.getwc.arg.0=FILE *,stream
tk func.getwc.args=1
tk func.getwc.ret=wint_t
tk func.getwchar.args=0
tk func.getwchar.ret=wint_t
tk func.gmtime.arg.0=const time_t *,timer
tk func.gmtime.args=1
tk func.gmtime.ret=tm*
tk func.group_from_gid.arg.0=gid_t,gid
tk func.group_from_gid.arg.1=int,nogroup
tk func.group_from_gid.args=2
tk func.group_from_gid.ret=char *
tk func.group_from_uid.include=grp.h
tk func.humanize_number.arg.0=char *,buf
tk func.humanize_number.arg.1=size_t,len
tk func.humanize_number.arg.2=int64_t,number
tk func.humanize_number.arg.3=const char *,suffix
tk func.humanize_number.arg.4=int,scale
tk func.humanize_number.arg.5=int,flags
tk func.humanize_number.args=1
tk func.humanize_number.ret=int
tk func.hypot.arg.0=arithmetic,x
tk func.hypot.arg.1=arithmetic,y
tk func.hypot.args=2
tk func.hypot.ret=floating_point
tk func.hypotf.arg.0=float,x
tk func.hypotf.arg.1=float,y
tk func.hypotf.args=2
tk func.hypotf.ret=float
tk func.hypotl.arg.0=long double,x
tk func.hypotl.arg.1=long double,y
tk func.hypotl.args=2
tk func.hypotl.ret=long double
tk func.ilogb.arg.0=arithmetic,x
tk func.ilogb.args=1
tk func.ilogb.ret=int
tk func.ilogbf.arg.0=float,x
tk func.ilogbf.args=1
tk func.ilogbf.ret=int
tk func.ilogbl.arg.0=long double,x
tk func.ilogbl.args=1
tk func.ilogbl.ret=int
tk func.imaxabs.arg.0=intmax_t,j
tk func.imaxabs.args=1
tk func.imaxabs.ret=intmax_t
tk func.imaxdiv.arg.0=intmax_t,numer
tk func.imaxdiv.arg.1=intmax_t,denom
tk func.imaxdiv.args=2
tk func.imaxdiv.ret=imaxdiv_t
tk func.inet_aton.arg.0=const char *,cp
tk func.inet_aton.arg.1=void *,pin
tk func.inet_aton.args=2
tk func.inet_aton.ret=int
tk func.inet_ntoa.arg.0=void *,in
tk func.inet_ntoa.args=1
tk func.inet_ntoa.ret=char *
tk func.initstate.arg.0=uint32_t,state
tk func.initstate.arg.1=char *,state
tk func.initstate.arg.2=size_t,size
tk func.initstate.args=3
tk func.initstate.ret=char *
tk func.ioctl.arg.0=int,fd
tk func.ioctl.arg.1=unsigned long,request
tk func.ioctl.args=2
tk func.ioctl.ret=int
tk func.isalnum.arg.0=int,c
tk func.isalnum.args=1
tk func.isalnum.ret=int
tk func.isalpha.arg.0=int,c
tk func.isalpha.args=1
tk func.isalpha.ret=int
tk func.isatty.arg.0=int,fd
tk func.isatty.args=1
tk func.isatty.ret=int
tk func.isblank.arg.0=int,c
tk func.isblank.args=1
tk func.isblank.ret=int
tk func.iscntrl.arg.0=int,c
tk func.iscntrl.args=1
tk func.iscntrl.ret=int
tk func.isdigit.arg.0=int,c
tk func.isdigit.args=1
tk func.isdigit.ret=int
tk func.isfinite.arg.0=arithmetic,x
tk func.isfinite.args=1
tk func.isfinite.ret=bool
tk func.isgraph.arg.0=int,c
tk func.isgraph.args=1
tk func.isgraph.ret=int
tk func.isgreater.arg.0=arithmetic,x
tk func.isgreater.arg.1=arithmetic,y
tk func.isgreater.args=2
tk func.isgreater.ret=bool
tk func.isgreaterequal.arg.0=arithmetic,x
tk func.isgreaterequal.arg.1=arithmetic,y
tk func.isgreaterequal.args=2
tk func.isgreaterequal.ret=bool
tk func.isinf.arg.0=arithmetic,x
tk func.isinf.args=1
tk func.isinf.ret=bool
tk func.isless.arg.0=arithmetic,x
tk func.isless.arg.1=arithmetic,y
tk func.isless.args=2
tk func.isless.ret=bool
tk func.islessequal.arg.0=arithmetic,x
tk func.islessequal.arg.1=arithmetic,y
tk func.islessequal.args=2
tk func.islessequal.ret=bool
tk func.islessgreater.arg.0=arithmetic,x
tk func.islessgreater.arg.1=arithmetic,y
tk func.islessgreater.args=2
tk func.islessgreater.ret=bool
tk func.islower.arg.0=int,c
tk func.islower.args=1
tk func.islower.ret=int
tk func.isnan.arg.0=arithmetic,x
tk func.isnan.args=1
tk func.isnan.ret=bool
tk func.isnormal.arg.0=arithmetic,x
tk func.isnormal.args=1
tk func.isnormal.ret=bool
tk func.isprint.arg.0=int,c
tk func.isprint.args=1
tk func.isprint.ret=int
tk func.ispunct.arg.0=int,c
tk func.ispunct.args=1
tk func.ispunct.ret=int
tk func.isspace.arg.0=int,c
tk func.isspace.args=1
tk func.isspace.ret=int
tk func.isunordered.arg.0=arithmetic,x
tk func.isunordered.arg.1=arithmetic,y
tk func.isunordered.args=2
tk func.isunordered.ret=bool
tk func.isupper.arg.0=int,c
tk func.isupper.args=1
tk func.isupper.ret=int
tk func.iswalnum.arg.0=wint_t,wc
tk func.iswalnum.args=1
tk func.iswalnum.ret=int
tk func.iswalpha.arg.0=wint_t,wc
tk func.iswalpha.args=1
tk func.iswalpha.ret=int
tk func.iswblank.arg.0=wint_t,wc
tk func.iswblank.args=1
tk func.iswblank.ret=int
tk func.iswcntrl.arg.0=wint_t,wc
tk func.iswcntrl.args=1
tk func.iswcntrl.ret=int
tk func.iswctype.arg.0=wint_t,wc
tk func.iswctype.arg.1=wctype_t,desc
tk func.iswctype.args=2
tk func.iswctype.ret=int
tk func.iswdigit.arg.0=wint_t,wc
tk func.iswdigit.args=1
tk func.iswdigit.ret=int
tk func.iswgraph.arg.0=wint_t,wc
tk func.iswgraph.args=1
tk func.iswgraph.ret=int
tk func.iswlower.arg.0=wint_t,wc
tk func.iswlower.args=1
tk func.iswlower.ret=int
tk func.iswprint.arg.0=wint_t,wc
tk func.iswprint.args=1
tk func.iswprint.ret=int
tk func.iswpunct.arg.0=wint_t,wc
tk func.iswpunct.args=1
tk func.iswpunct.ret=int
tk func.iswspace.arg.0=wint_t,wc
tk func.iswspace.args=1
tk func.iswspace.ret=int
tk func.iswupper.arg.0=wint_t,wc
tk func.iswupper.args=1
tk func.iswupper.ret=int
tk func.iswxdigit.arg.0=wint_t,wc
tk func.iswxdigit.args=1
tk func.iswxdigit.ret=int
tk func.isxdigit.arg.0=int,c
tk func.isxdigit.args=1
tk func.isxdigit.ret=int
tk func.kill.arg.0=pid_t,pid
tk func.kill.arg.1=int,sig
tk func.kill.args=2
tk func.kill.ret=int
tk func.labs.arg.0=long,j
tk func.labs.args=1
tk func.labs.ret=long
tk func.ldexp.arg.0=arithmetic,value
tk func.ldexp.arg.1=int,exp
tk func.ldexp.args=2
tk func.ldexp.ret=floating_point
tk func.ldexpf.arg.0=float,value
tk func.ldexpf.arg.1=int,exp
tk func.ldexpf.args=2
tk func.ldexpf.ret=float
tk func.ldexpl.arg.0=long double,value
tk func.ldexpl.arg.1=int,exp
tk func.ldexpl.args=2
tk func.ldexpl.ret=long double
tk func.ldiv.arg.0=long,numer
tk func.ldiv.arg.1=long,denom
tk func.ldiv.args=2
tk func.ldiv.ret=ldiv_t
tk func.lgamma.arg.0=arithmetic,x
tk func.lgamma.args=1
tk func.lgamma.ret=floating_point
tk func.lgammaf.arg.0=float,x
tk func.lgammaf.args=1
tk func.lgammaf.ret=float
tk func.lgammal.arg.0=long double,x
tk func.lgammal.args=1
tk func.lgammal.ret=long double
tk func.llabs.arg.0=long long,j
tk func.llabs.args=1
tk func.llabs.ret=long long
tk func.lldiv.arg.0=long long,numer
tk func.lldiv.arg.1=long long,denom
tk func.lldiv.args=2
tk func.lldiv.ret=lldiv_t
tk func.llrint.arg.0=arithmetic,x
tk func.llrint.args=1
tk func.llrint.ret=long long
tk func.llrintf.arg.0=float,x
tk func.llrintf.args=1
tk func.llrintf.ret=long long
tk func.llrintl.arg.0=long double,x
tk func.llrintl.args=1
tk func.llrintl.ret=long long
tk func.llround.arg.0=arithmetic,x
tk func.llround.args=1
tk func.llround.ret=long long
tk func.llroundf.arg.0=float,x
tk func.llroundf.args=1
tk func.llroundf.ret=long long
tk func.llroundl.arg.0=long double,x
tk func.llroundl.args=1
tk func.llroundl.ret=long long
tk func.localeconv.args=0
tk func.localeconv.ret=lconv*
tk func.localtime.arg.0=const time_t *,timer
tk func.localtime.args=1
tk func.localtime.ret=tm*
tk func.log.arg.0=arithmetic,x
tk func.log.args=1
tk func.log.ret=floating_point
tk func.log10.arg.0=arithmetic,x
tk func.log10.args=1
tk func.log10.ret=floating_point
tk func.log10f.arg.0=float,x
tk func.log10f.args=1
tk func.log10f.ret=float
tk func.log10l.arg.0=long double,x
tk func.log10l.args=1
tk func.log10l.ret=long double
tk func.log1p.arg.0=arithmetic,x
tk func.log1p.args=1
tk func.log1p.ret=floating_point
tk func.log1pf.arg.0=float,x
tk func.log1pf.args=1
tk func.log1pf.ret=float
tk func.log1pl.arg.0=long double,x
tk func.log1pl.args=1
tk func.log1pl.ret=long double
tk func.log2.arg.0=arithmetic,x
tk func.log2.args=1
tk func.log2.ret=floating_point
tk func.log2f.arg.0=float,x
tk func.log2f.args=1
tk func.log2f.ret=float
tk func.log2l.arg.0=long double,x
tk func.log2l.args=1
tk func.log2l.ret=long double
tk func.logb.arg.0=arithmetic,x
tk func.logb.args=1
tk func.logb.ret=floating_point
tk func.logbf.arg.0=float,x
tk func.logbf.args=1
tk func.logbf.ret=float
tk func.logbl.arg.0=long double,x
tk func.logbl.args=1
tk func.logbl.ret=long double
tk func.logf.arg.0=float,x
tk func.logf.args=1
tk func.logf.ret=float
tk func.logl.arg.0=long double,x
tk func.logl.args=1
tk func.logl.ret=long double
tk func.longjmp.arg.0=jmp_buf,env
tk func.longjmp.arg.1=int,val
tk func.longjmp.args=2
tk func.longjmp.ret=void
tk func.lrint.arg.0=arithmetic,x
tk func.lrint.args=1
tk func.lrint.ret=long
tk func.lrintf.arg.0=float,x
tk func.lrintf.args=1
tk func.lrintf.ret=long
tk func.lrintl.arg.0=long double,x
tk func.lrintl.args=1
tk func.lrintl.ret=long
tk func.lround.arg.0=arithmetic,x
tk func.lround.args=1
tk func.lround.ret=long
tk func.lroundf.arg.0=float,x
tk func.lroundf.args=1
tk func.lroundf.ret=long
tk func.lroundl.arg.0=long double,x
tk func.lroundl.args=1
tk func.lroundl.ret=long
tk func.lstat.arg.0=const char *,path
tk func.lstat.arg.1=void *,buf
tk func.lstat.args=2
tk func.lstat.ret=void
tk func.main.arg.0=int,argc
tk func.main.arg.1=char **,argv
tk func.main.arg.2=char **,envp
tk func.main.args=3
tk func.main.ret=int
tk func.malloc.arg.0=size_t,size
tk func.malloc.args=1
tk func.malloc.ret=void *
tk func.maskrune.arg.0=uint32_t,c
tk func.maskrune.arg.1=unsigned long,f
tk func.maskrune.args=2
tk func.maskrune.ret=int
tk func.mblen.arg.0=const char *,s
tk func.mblen.arg.1=size_t,n
tk func.mblen.args=2
tk func.mblen.ret=int
tk func.mbrlen.arg.0=const char *,s
tk func.mbrlen.arg.1=size_t,n
tk func.mbrlen.arg.2=mbstate_t *,ps
tk func.mbrlen.args=3
tk func.mbrlen.ret=size_t
tk func.mbrtowc.arg.0=wchar_t *,pwc
tk func.mbrtowc.arg.1=const char *,s
tk func.mbrtowc.arg.2=size_t,n
tk func.mbrtowc.arg.3=mbstate_t *,ps
tk func.mbrtowc.args=4
tk func.mbrtowc.ret=size_t
tk func.mbsinit.arg.0=const mbstate_t *,ps
tk func.mbsinit.args=1
tk func.mbsinit.ret=int
tk func.mbsrtowcs.arg.0=wchar_t *,dst
tk func.mbsrtowcs.arg.1=const char * *,src
tk func.mbsrtowcs.arg.2=size_t,len
tk func.mbsrtowcs.arg.3=mbstate_t *,ps
tk func.mbsrtowcs.args=4
tk func.mbsrtowcs.ret=size_t
tk func.mbstowcs.arg.0=wchar_t *,pwcs
tk func.mbstowcs.arg.1=const char *,s
tk func.mbstowcs.arg.2=size_t,n
tk func.mbstowcs.args=3
tk func.mbstowcs.ret=size_t
tk func.mbtowc.arg.0=wchar_t *,pwc
tk func.mbtowc.arg.1=const char *,s
tk func.mbtowc.arg.2=size_t,n
tk func.mbtowc.args=3
tk func.mbtowc.ret=int
tk func.memchr.arg.0=void *,s
tk func.memchr.arg.1=int,c
tk func.memchr.arg.2=size_t,n
tk func.memchr.args=3
tk func.memchr.ret=void *
tk func.memcmp.arg.0=const void *,s1
tk func.memcmp.arg.1=const void *,s2
tk func.memcmp.arg.2=size_t,n
tk func.memcmp.args=3
tk func.memcmp.ret=int
tk func.memcpy.arg.0=void *,s1
tk func.memcpy.arg.1=const void *,s2
tk func.memcpy.arg.2=size_t,n
tk func.memcpy.args=3
tk func.memcpy.ret=void *
tk func.memmem.arg.0=const void *,big
tk func.memmem.arg.1=int,big_len
tk func.memmem.arg.2=const void *,little
tk func.memmem.arg.3=int,little_len
tk func.memmem.args=4
tk func.memmem.ret=void *
tk func.memmove.arg.0=void *,s1
tk func.memmove.arg.1=const void *,s2
tk func.memmove.arg.2=size_t,n
tk func.memmove.args=3
tk func.memmove.ret=void *
tk func.memset.arg.0=void *,s
tk func.memset.arg.1=int,c
tk func.memset.arg.2=size_t,n
tk func.memset.args=3
tk func.memset.ret=void *
tk func.mkstemp.arg.0=char *,template
tk func.mkstemp.args=1
tk func.mkstemp.ret=int
tk func.mktemp.arg.0=char *,template
tk func.mktemp.args=1
tk func.mktemp.ret=char *
tk func.mktime.arg.0=tm *,timeptr
tk func.mktime.args=1
tk func.mktime.ret=time_t
tk func.mmap.arg.0=void*,addr
tk func.mmap.arg.1=size_t,length
tk func.mmap.arg.2=int,prot
tk func.mmap.arg.3=int,flags
tk func.mmap.arg.4=int,fd
tk func.mmap.arg.5=size_t,offset
tk func.mmap.args=6
tk func.mmap.ret=void*
tk func.modf.arg.0=floating_point,value
tk func.modf.arg.1=floating_point *,iptr
tk func.modf.args=2
tk func.modf.ret=floating_point
tk func.modff.arg.0=float,value
tk func.modff.arg.1=float *,iptr
tk func.modff.args=2
tk func.modff.ret=float
tk func.modfl.arg.0=long double,value
tk func.modfl.arg.1=long double *,iptr
tk func.modfl.args=2
tk func.modfl.ret=long double
tk func.munmap.arg.0=void*,addr
tk func.munmap.arg.1=size_t,length
tk func.munmap.args=2
tk func.munmap.ret=int
tk func.nan.arg.0=const char *,str
tk func.nan.args=1
tk func.nan.ret=double
tk func.nanf.arg.0=const char *,str
tk func.nanf.args=1
tk func.nanf.ret=float
tk func.nanl.arg.0=const char *,str
tk func.nanl.args=1
tk func.nanl.ret=long double
tk func.nanosleep.arg.0=const struct timespec *,req
tk func.nanosleep.arg.1=struct timespec *,rem
tk func.nanosleep.args=2
tk func.nanosleep.ret=int
tk func.nearbyint.arg.0=arithmetic,x
tk func.nearbyint.args=1
tk func.nearbyint.ret=floating_point
tk func.nearbyintf.arg.0=float,x
tk func.nearbyintf.args=1
tk func.nearbyintf.ret=float
tk func.nearbyintl.arg.0=long double,x
tk func.nearbyintl.args=1
tk func.nearbyintl.ret=long double
tk func.nextafter.arg.0=arithmetic,x
tk func.nextafter.arg.1=arithmetic,y
tk func.nextafter.args=2
tk func.nextafter.ret=floating_point
tk func.nextafterf.arg.0=float,x
tk func.nextafterf.arg.1=float,y
tk func.nextafterf.args=2
tk func.nextafterf.ret=float
tk func.nextafterl.arg.0=long double,x
tk func.nextafterl.arg.1=long double,y
tk func.nextafterl.args=2
tk func.nextafterl.ret=long double
tk func.nexttoward.arg.0=arithmetic,x
tk func.nexttoward.arg.1=long double,y
tk func.nexttoward.args=2
tk func.nexttoward.ret=floating_point
tk func.nexttowardf.arg.0=float,x
tk func.nexttowardf.arg.1=long double,y
tk func.nexttowardf.args=2
tk func.nexttowardf.ret=float
tk func.nexttowardl.arg.0=long double,x
tk func.nexttowardl.arg.1=long double,y
tk func.nexttowardl.args=2
tk func.nexttowardl.ret=long double
tk func.nl_langinfo.arg.0=nl_item,item
tk func.nl_langinfo.args=1
tk func.nl_langinfo.ret=char *
tk func.nl_langinfo_l.arg.0=nl_item,item
tk func.nl_langinfo_l.arg.1=locale_t locale
tk func.nl_langinfo_l.args=2
tk func.nl_langinfo_l.ret=char *
tk func.objc_enumerationMutation.arg.0=void *,instance
tk func.objc_enumerationMutation.args=1
tk func.objc_enumerationMutation.ret=void
tk func.objc_msgSend.arg.0=void *,instance
tk func.objc_msgSend.arg.1=char *,selector
tk func.objc_msgSend.args=2
tk func.objc_msgSend.ret=void *
tk func.objc_msgSendSuper2.arg.0=void *,instance
tk func.objc_msgSendSuper2.arg.1=char *,selector
tk func.objc_msgSendSuper2.args=2
tk func.objc_msgSendSuper2.ret=void *
tk func.objc_release.arg.0=void *,instance
tk func.objc_release.args=1
tk func.objc_release.ret=void
tk func.objc_retain.arg.0=void *,instance
tk func.objc_retain.args=1
tk func.objc_retain.ret=void
tk func.objc_retainAutoreleasedReturnValue.arg.0=void *,instance
tk func.objc_retainAutoreleasedReturnValue.args=1
tk func.objc_retainAutoreleasedReturnValue.ret=void
tk func.objc_storeStrong.arg.0=void *,instance
tk func.objc_storeStrong.arg.1=int,type
tk func.objc_storeStrong.args=2
tk func.objc_storeStrong.ret=void *
tk func.open.arg.0=const char *,path
tk func.open.arg.1=int,oflag
tk func.open.args=2
tk func.open.ret=int
tk func.openat.arg.0=int,fd
tk func.openat.arg.1=const char *,path
tk func.openat.arg.2=int,oflag
tk func.openat.args=3
tk func.openat.ret=int
tk func.pclose.arg.0=FILE *,stream
tk func.pclose.args=1
tk func.pclose.ret=int
tk func.perror.arg.0=const char *,s
tk func.perror.args=1
tk func.perror.ret=void
tk func.popen.arg.0=const char *,filename
tk func.popen.arg.1=const char *,mode
tk func.popen.args=2
tk func.popen.ret=file*
tk func.pow.arg.0=arithmetic,x
tk func.pow.arg.1=arithmetic,y
tk func.pow.args=2
tk func.pow.ret=floating_point
tk func.powf.arg.0=float,x
tk func.powf.arg.1=float,y
tk func.powf.args=2
tk func.powf.ret=float
tk func.powl.arg.0=long double,x
tk func.powl.arg.1=long double,y
tk func.powl.args=2
tk func.powl.ret=long double
tk func.prctl.arg.0=int,option
tk func.prctl.arg.1=unsigned long,v2
tk func.prctl.arg.2=unsigned long,v3
tk func.prctl.arg.3=unsigned long,v4
tk func.prctl.arg.4=unsigned long,v5
tk func.prctl.args=5
tk func.prctl.ret=int
tk func.printf.arg.0=const char *,format
tk func.printf.args=1
tk func.printf.ret=int
tk func.ptrace.arg.0=__ptrace_request,request
tk func.ptrace.arg.1=pid_t,pid
tk func.ptrace.arg.2=void*,addr
tk func.ptrace.arg.3=void*,data
tk func.ptrace.args=4
tk func.ptrace.ret=long
tk func.putc.arg.0=int,c
tk func.putc.arg.1=FILE *,stream
tk func.putc.args=2
tk func.putc.ret=int
tk func.putchar.arg.0=int,c
tk func.putchar.args=1
tk func.putchar.ret=int
tk func.puts.arg.0=const char *,s
tk func.puts.args=1
tk func.puts.ret=int
tk func.pututxline.arg.0=void *,utx
tk func.pututxline.args=1
tk func.pututxline.ret=void *
tk func.putwc.arg.0=wchar_t,c
tk func.putwc.arg.1=FILE *,stream
tk func.putwc.args=2
tk func.putwc.ret=wint_t
tk func.putwchar.arg.0=wchar_t,c
tk func.putwchar.args=1
tk func.putwchar.ret=wint_t
tk func.qsort.arg.0=void *,base
tk func.qsort.arg.1=size_t,nmemb
tk func.qsort.arg.2=size_t,size
tk func.qsort.arg.3=int(*compar)(const void *,const void *)
tk func.qsort.args=4
tk func.quick_exit.arg.0=int,status
tk func.quick_exit.args=1
tk func.quick_exit.ret=void
tk func.raise.arg.0=int,sig
tk func.raise.args=1
tk func.raise.ret=int
tk func.rand.args=0
tk func.rand.ret=int
tk func.random.args=0
tk func.random.ret=uint32_t
tk func.read.arg.0=int,fildes
tk func.read.arg.1=void *,buf
tk func.read.arg.2=size_t,nbyte
tk func.read.args=3
tk func.read.ret=ssize_t
tk func.realloc.arg.0=void *,ptr
tk func.realloc.arg.1=size_t,size
tk func.realloc.args=2
tk func.realloc.ret=void *
tk func.reallocf.arg.0=void *,ptr
tk func.reallocf.arg.1=size_t,size
tk func.reallocf.args=2
tk func.reallocf.ret=void *
tk func.recv.arg.0=int,socket
tk func.recv.arg.1=void *,buffer
tk func.recv.arg.2=size_t,length
tk func.recv.arg.3=int,flags
tk func.recv.args=4
tk func.recv.ret=ssize_t
tk func.remainder.arg.0=arithmetic,x
tk func.remainder.arg.1=arithmetic,y
tk func.remainder.args=2
tk func.remainder.ret=floating_point
tk func.remainderf.arg.0=float,x
tk func.remainderf.arg.1=float,y
tk func.remainderf.args=2
tk func.remainderf.ret=float
tk func.remainderl.arg.0=long double,x
tk func.remainderl.arg.1=long double,y
tk func.remainderl.args=2
tk func.remainderl.ret=long double
tk func.remove.arg.0=const char *,filename
tk func.remove.args=1
tk func.remove.ret=int
tk func.remquo.arg.0=arithmetic,x
tk func.remquo.arg.1=arithmetic,y
tk func.remquo.arg.2=int *,pquo
tk func.remquo.args=3
tk func.remquo.ret=floating_point
tk func.remquof.arg.0=float,x
tk func.remquof.arg.1=float,y
tk func.remquof.arg.2=int *,pquo
tk func.remquof.args=3
tk func.remquof.ret=float
tk func.remquol.arg.0=long double,x
tk func.remquol.arg.1=long double,y
tk func.remquol.arg.2=int *,pquo
tk func.remquol.args=3
tk func.remquol.ret=long double
tk func.rename.arg.0=const char *,oldpath
tk func.rename.arg.1=const char *,newpath
tk func.rename.args=2
tk func.rename.ret=int
tk func.rewind.arg.0=FILE *,stream
tk func.rewind.args=1
tk func.rewind.ret=void
tk func.rint.arg.0=arithmetic,x
tk func.rint.args=1
tk func.rint.ret=floating_point
tk func.rintf.arg.0=float,x
tk func.rintf.args=1
tk func.rintf.ret=float
tk func.rintl.arg.0=long double,x
tk func.rintl.args=1
tk func.rintl.ret=long double
tk func.round.arg.0=arithmetic,x
tk func.round.args=1
tk func.round.ret=floating_point
tk func.roundf.arg.0=float,x
tk func.roundf.args=1
tk func.roundf.ret=float
tk func.roundl.arg.0=long double,x
tk func.roundl.args=1
tk func.roundl.ret=long double
tk func.scalbln.arg.0=arithmetic,x
tk func.scalbln.arg.1=long,ex
tk func.scalbln.args=2
tk func.scalbln.ret=floating_point
tk func.scalblnf.arg.0=float,x
tk func.scalblnf.arg.1=long,ex
tk func.scalblnf.args=2
tk func.scalblnf.ret=float
tk func.scalblnl.arg.0=long double,x
tk func.scalblnl.arg.1=long,ex
tk func.scalblnl.args=2
tk func.scalblnl.ret=long double
tk func.scalbn.arg.0=arithmetic,x
tk func.scalbn.arg.1=int,ex
tk func.scalbn.args=2
tk func.scalbn.ret=floating_point
tk func.scalbnf.arg.0=float,x
tk func.scalbnf.arg.1=int,ex
tk func.scalbnf.args=2
tk func.scalbnf.ret=float
tk func.scalbnl.arg.0=long double,x
tk func.scalbnl.arg.1=int,ex
tk func.scalbnl.args=2
tk func.scalbnl.ret=long double
tk func.scanf.arg.0=const char *,format
tk func.scanf.args=1
tk func.scanf.ret=int
tk func.select.arg.0=int,nfds
tk func.select.arg.1=fd_set *,readfds
tk func.select.arg.2=fd_set *,writefds
tk func.select.arg.3=fd_set *,exceptfds
tk func.select.arg.4=struct timeval *,timeout
tk func.select.args=5
tk func.select.ret=int
tk func.send.arg.0=int,socket
tk func.send.arg.1=void *,buffer
tk func.send.arg.2=size_t,length
tk func.send.arg.3=int,flags
tk func.send.args=4
tk func.send.ret=ssize_t
tk func.setbuf.arg.0=FILE *,stream
tk func.setbuf.arg.1=char *,buf
tk func.setbuf.args=2
tk func.setbuf.ret=void
tk func.setenv.arg.0=const char *,name
tk func.setenv.arg.1=const char *,value
tk func.setenv.arg.2=int,overwrite
tk func.setenv.args=3
tk func.setenv.ret=int
tk func.setjmp.arg.0=jmpbuf,env
tk func.setjmp.args=1
tk func.setjmp.ret=int
tk func.setlocale.arg.0=int,category
tk func.setlocale.arg.1=const char *,locale
tk func.setlocale.args=2
tk func.setlocale.ret=char *
tk func.setsockopt.arg.0=int,sockfd
tk func.setsockopt.arg.1=int,level
tk func.setsockopt.arg.2=int,optname
tk func.setsockopt.arg.3=void *,optval
tk func.setsockopt.arg.4=socklen_t,optlen
tk func.setsockopt.args=5
tk func.setsockopt.ret=int
tk func.setstate.arg.0=const char *,state
tk func.setstate.args=1
tk func.setstate.ret=const char *
tk func.setvbuf.arg.0=FILE*,stream
tk func.setvbuf.arg.1=char *,buf
tk func.setvbuf.arg.2=int,mode
tk func.setvbuf.arg.3=size_t,size
tk func.setvbuf.args=4
tk func.setvbuf.ret=int
tk func.sigaction.arg.0=int,signum
tk func.sigaction.arg.1=const struct sigaction *,act
tk func.sigaction.arg.2=struct sigaction *,oldact
tk func.sigaction.args=3
tk func.sigaction.ret=int
tk func.signal.arg.0=int,sig
tk func.signal.arg.1=void *,func
tk func.signal.args=2
tk func.signal.ret=void
tk func.signbit.arg.0=arithmetic,x
tk func.signbit.args=1
tk func.signbit.ret=bool
tk func.sin.arg.0=arithmetic,x
tk func.sin.args=1
tk func.sin.ret=floating_point
tk func.sinf.arg.0=float,x
tk func.sinf.args=1
tk func.sinf.ret=float
tk func.sinh.arg.0=arithmetic,x
tk func.sinh.args=1
tk func.sinh.ret=floating_point
tk func.sinhf.arg.0=float,x
tk func.sinhf.args=1
tk func.sinhf.ret=float
tk func.sinhl.arg.0=long double,x
tk func.sinhl.args=1
tk func.sinhl.ret=long double
tk func.sinl.arg.0=long double,x
tk func.sinl.args=1
tk func.sinl.ret=long double
tk func.sleep.arg.0=int,s
tk func.sleep.args=1
tk func.sleep.ret=int
tk func.snprintf.arg.0=char *,s
tk func.snprintf.arg.1=size_t,size
tk func.snprintf.arg.2=const char *,format
tk func.snprintf.arg.3=,...
tk func.snprintf.args=4
tk func.snprintf.ret=int
tk func.snprintf_chk.arg.0=char *,s
tk func.snprintf_chk.arg.1=size_t,size
tk func.snprintf_chk.arg.2=const char *,format
tk func.snprintf_chk.arg.3=,...
tk func.snprintf_chk.args=4
tk func.snprintf_chk.ret=int
tk func.socket.arg.0=int,domain
tk func.socket.arg.1=int,type
tk func.socket.arg.2=int,protocol
tk func.socket.args=3
tk func.socket.ret=int
tk func.sprintf.arg.0=char *,s
tk func.sprintf.arg.1=const char *,format
tk func.sprintf.arg.2=,...
tk func.sprintf.args=3
tk func.sprintf.ret=int
tk func.sprintf_chk.arg.0=char *,s
tk func.sprintf_chk.arg.1=const char *,format
tk func.sprintf_chk.arg.2=,...
tk func.sprintf_chk.args=3
tk func.sprintf_chk.ret=int
tk func.sqrt.arg.0=arithmetic,x
tk func.sqrt.args=1
tk func.sqrt.ret=floating_point
tk func.sqrtf.arg.0=float,x
tk func.sqrtf.args=1
tk func.sqrtf.ret=float
tk func.sqrtl.arg.0=long double,x
tk func.sqrtl.args=1
tk func.sqrtl.ret=long double
tk func.srand.arg.0=int,seed
tk func.srand.args=1
tk func.srand.ret=void
tk func.srandom.arg.0=uint32_t,seed
tk func.srandom.args=1
tk func.srandom.ret=uint32_t
tk func.srandomdev.args=0
tk func.srandomdev.ret=void
tk func.sscanf.arg.0=const char *,s
tk func.sscanf.arg.1=const char *,format
tk func.sscanf.arg.2=,...
tk func.sscanf.args=3
tk func.sscanf.ret=int
tk func.strcasecmp.arg.0=const char *,s1
tk func.strcasecmp.arg.1=const char *,s2
tk func.strcasecmp.args=2
tk func.strcasecmp.ret=int
tk func.strcat.arg.0=char *,s1
tk func.strcat.arg.1=const char *,s2
tk func.strcat.args=2
tk func.strcat.ret=char *
tk func.strchr.arg.0=const char *,s
tk func.strchr.arg.1=int,c
tk func.strchr.args=2
tk func.strchr.ret=char *
tk func.strcmp.arg.0=const char *,s1
tk func.strcmp.arg.1=const char *,s2
tk func.strcmp.args=2
tk func.strcmp.ret=int
tk func.strcoll.arg.0=const char *,s1
tk func.strcoll.arg.1=const char *,s2
tk func.strcoll.args=2
tk func.strcoll.ret=int
tk func.strcpy.arg.0=char *,dest
tk func.strcpy.arg.1=const char *,src
tk func.strcpy.args=2
tk func.strcpy.ret=char *
tk func.strcpy_chk.arg.0=char *,dest
tk func.strcpy_chk.arg.1=const char *,src
tk func.strcpy_chk.args=2
tk func.strcpy_chk.ret=char *
tk func.strcspn.arg.0=const char *,s1
tk func.strcspn.arg.1=const char *,s2
tk func.strcspn.args=2
tk func.strcspn.ret=size_t
tk func.strdup.arg.0=const char *,src
tk func.strdup.args=1
tk func.strdup.ret=char *
tk func.strerror.arg.0=int,errnum
tk func.strerror.args=1
tk func.strerror.ret=char *
tk func.strftime.arg.0=char *,s
tk func.strftime.arg.1=size_t,maxsize
tk func.strftime.arg.2=const char *,format
tk func.strftime.arg.3=const tm *,timeptr
tk func.strftime.args=4
tk func.strftime.ret=size_t
tk func.strlcpy.arg.0=char *,dest
tk func.strlcpy.arg.1=const char *,src
tk func.strlcpy.arg.2=size_t, n
tk func.strlcpy.args=3
tk func.strlcpy.ret=char *
tk func.strlen.arg.0=const char *,s
tk func.strlen.args=1
tk func.strlen.ret=size_t
tk func.strmode.arg.0=int,mode
tk func.strmode.arg.1=char *,bp
tk func.strmode.args=2
tk func.strmode.ret=void
tk func.strncasecmp.arg.0=const char *,s1
tk func.strncasecmp.arg.1=const char *,s2
tk func.strncasecmp.arg.2=size_t,n
tk func.strncasecmp.args=3
tk func.strncasecmp.ret=int
tk func.strncat.arg.0=char *,s1
tk func.strncat.arg.1=const char *,s2
tk func.strncat.arg.2=size_t,n
tk func.strncat.args=3
tk func.strncat.ret=char *
tk func.strncmp.arg.0=const char *,s1
tk func.strncmp.arg.1=const char *,s2
tk func.strncmp.arg.2=size_t,n
tk func.strncmp.args=3
tk func.strncmp.ret=int
tk func.strncpy.arg.0=char *,dest
tk func.strncpy.arg.1=const char *,src
tk func.strncpy.arg.2=size_t, n
tk func.strncpy.args=3
tk func.strncpy.ret=char *
tk func.strndup.arg.0=const char *,src
tk func.strndup.arg.1=int,n
tk func.strndup.args=2
tk func.strndup.ret=char *
tk func.strpbrk.arg.0=const char *,s1
tk func.strpbrk.arg.1=const char *,s2
tk func.strpbrk.args=2
tk func.strpbrk.ret=char *
tk func.strrchr.arg.0=const char *,s
tk func.strrchr.arg.1=int,c
tk func.strrchr.args=2
tk func.strrchr.ret=char *
tk func.strspn.arg.0=const char *,s1
tk func.strspn.arg.1=const char *,s2
tk func.strspn.args=2
tk func.strspn.ret=size_t
tk func.strstr.arg.0=const char *,s1
tk func.strstr.arg.1=const char *,s2
tk func.strstr.args=2
tk func.strstr.ret=char *
tk func.strtod.arg.0=const char *,str
tk func.strtod.arg.1=char * *,endptr
tk func.strtod.args=2
tk func.strtod.ret=double
tk func.strtof.arg.0=const char *,str
tk func.strtof.arg.1=char * *,endptr
tk func.strtof.args=2
tk func.strtof.ret=float
tk func.strtoimax.arg.0=const char *,str
tk func.strtoimax.arg.1=char * *,endptr
tk func.strtoimax.arg.2=int,base
tk func.strtoimax.args=3
tk func.strtoimax.ret=intmax_t
tk func.strtok.arg.0=char *,s1
tk func.strtok.arg.1=const char *,s2
tk func.strtok.args=2
tk func.strtok.ret=char *
tk func.strtol.arg.0=const char *,str
tk func.strtol.arg.1=char * *,endptr
tk func.strtol.arg.2=int,base
tk func.strtol.args=3
tk func.strtol.ret=long
tk func.strtold.arg.0=const char *,str
tk func.strtold.arg.1=char * *,endptr
tk func.strtold.args=2
tk func.strtold.ret=long double
tk func.strtoll.arg.0=const char *,str
tk func.strtoll.arg.1=char * *,endptr
tk func.strtoll.arg.2=int,base
tk func.strtoll.args=3
tk func.strtoll.ret=long long
tk func.strtoul.arg.0=const char *,str
tk func.strtoul.arg.1=char * *,endptr
tk func.strtoul.arg.2=int,base
tk func.strtoul.args=3
tk func.strtoul.ret=long
tk func.strtoull.arg.0=const char *,str
tk func.strtoull.arg.1=char * *,endptr
tk func.strtoull.arg.2=int,base
tk func.strtoull.args=3
tk func.strtoull.ret=long long
tk func.strtoumax.arg.0=const char *,str
tk func.strtoumax.arg.1=char * *,endptr
tk func.strtoumax.arg.2=int,base
tk func.strtoumax.args=3
tk func.strtoumax.ret=uintmax_t
tk func.strxfrm.arg.0=char *,s1
tk func.strxfrm.arg.1=const char *,s2
tk func.strxfrm.arg.2=size_t,n
tk func.strxfrm.args=3
tk func.strxfrm.ret=size_t
tk func.swprintf.arg.0=wchar_t *,s
tk func.swprintf.arg.1=size_t,n
tk func.swprintf.arg.2=const wchar_t *,format
tk func.swprintf.args=3
tk func.swprintf.ret=int
tk func.swscanf.arg.0=const wchar_t *,s
tk func.swscanf.arg.1=const wchar_t *,format
tk func.swscanf.args=2
tk func.swscanf.ret=int
tk func.sym.__libc_csu_init.arg.0=int64_t,arg1
tk func.sym.__libc_csu_init.arg.1=int64_t,arg2
tk func.sym.__libc_csu_init.arg.2=int64_t,arg3
tk func.sym.__libc_csu_init.args=3
tk func.sym.add_list.arg.0=int64_t,arg1
tk func.sym.add_list.args=1
tk func.sym.find_list.arg.0=int64_t,arg1
tk func.sym.find_list.args=1
tk func.sym.getnline.arg.0=int64_t,arg1
tk func.sym.getnline.arg.1=signed int64_t,arg2
tk func.sym.getnline.args=2
tk func.symlink.arg.0=const char *,path1
tk func.symlink.arg.1=const char *,path2
tk func.symlink.args=2
tk func.symlink.ret=int
tk func.system.arg.0=const char *,string
tk func.system.args=1
tk func.system.ret=int
tk func.tan.arg.0=arithmetic,x
tk func.tan.args=1
tk func.tan.ret=floating_point
tk func.tanf.arg.0=float,x
tk func.tanf.args=1
tk func.tanf.ret=float
tk func.tanh.arg.0=arithmetic,x
tk func.tanh.args=1
tk func.tanh.ret=floating_point
tk func.tanhf.arg.0=float,x
tk func.tanhf.args=1
tk func.tanhf.ret=float
tk func.tanhl.arg.0=long double,x
tk func.tanhl.args=1
tk func.tanhl.ret=long double
tk func.tanl.arg.0=long double,x
tk func.tanl.args=1
tk func.tanl.ret=long double
tk func.textdomain.arg.0=char *,domainname
tk func.textdomain.args=1
tk func.textdomain.ret=char *
tk func.tgamma.arg.0=arithmetic,x
tk func.tgamma.args=1
tk func.tgamma.ret=floating_point
tk func.tgammaf.arg.0=float,x
tk func.tgammaf.args=1
tk func.tgammaf.ret=float
tk func.tgammal.arg.0=long double,x
tk func.tgammal.args=1
tk func.tgammal.ret=long double
tk func.tgoto.arg.0=const char *,cap
tk func.tgoto.arg.1=int,col
tk func.tgoto.arg.2=int,row
tk func.tgoto.args=3
tk func.tgoto.ret=char *
tk func.time.arg.0=time_t *,timer
tk func.time.args=1
tk func.time.ret=time_t
tk func.tmpfile.args=0
tk func.tmpfile.ret=file*
tk func.tmpnam.arg.0=char *,s
tk func.tmpnam.args=1
tk func.tmpnam.ret=char *
tk func.tolower.arg.0=int,c
tk func.tolower.args=1
tk func.tolower.ret=int
tk func.toupper.arg.0=int,c
tk func.toupper.args=1
tk func.toupper.ret=int
tk func.towctrans.arg.0=wint_t,wc
tk func.towctrans.arg.1=wctrans_t,desc
tk func.towctrans.args=2
tk func.towctrans.ret=wint_t
tk func.towlower.arg.0=wint_t,wc
tk func.towlower.args=1
tk func.towlower.ret=wint_t
tk func.towupper.arg.0=wint_t,wc
tk func.towupper.args=1
tk func.towupper.ret=wint_t
tk func.trunc.arg.0=arithmetic,x
tk func.trunc.args=1
tk func.trunc.ret=floating_point
tk func.truncf.arg.0=float,x
tk func.truncf.args=1
tk func.truncf.ret=float
tk func.truncl.arg.0=long double,x
tk func.truncl.args=1
tk func.truncl.ret=long double
tk func.umask.arg.0=int,m
tk func.umask.args=1
tk func.umask.ret=int
tk func.ungetc.arg.0=int,c
tk func.ungetc.arg.1=FILE *,stream
tk func.ungetc.args=2
tk func.ungetc.ret=int
tk func.ungetwc.arg.0=wint_t,c
tk func.ungetwc.arg.1=FILE *,stream
tk func.ungetwc.args=2
tk func.ungetwc.ret=wint_t
tk func.unlink.arg.0=const char *,path
tk func.unlink.args=1
tk func.unlink.ret=int
tk func.user_from_uid.arg.0=uid_t,uid
tk func.user_from_uid.arg.1=int,nouser
tk func.user_from_uid.args=2
tk func.user_from_uid.include=pwd.h
tk func.user_from_uid.ret=char *
tk func.usleep.arg.0=int,s
tk func.usleep.args=1
tk func.usleep.ret=int
tk func.vfprintf.arg.0=FILE *,stream
tk func.vfprintf.arg.1=const char *,format
tk func.vfprintf.arg.2=va_list,ap
tk func.vfprintf.args=3
tk func.vfprintf.ret=int
tk func.vfscanf.arg.0=FILE *,stream
tk func.vfscanf.arg.1=const char *,format
tk func.vfscanf.arg.2=va_list,ap
tk func.vfscanf.args=3
tk func.vfscanf.ret=int
tk func.vfwprintf.arg.0=FILE *,stream
tk func.vfwprintf.arg.1=const wchar_t *,format
tk func.vfwprintf.arg.2=va_list,arg
tk func.vfwprintf.args=3
tk func.vfwprintf.ret=int
tk func.vfwscanf.arg.0=FILE *,stream
tk func.vfwscanf.arg.1=const wchar_t *,format
tk func.vfwscanf.arg.2=va_list,arg
tk func.vfwscanf.args=3
tk func.vfwscanf.ret=int
tk func.vprintf.arg.0=const char *,format
tk func.vprintf.arg.1=va_list,ap
tk func.vprintf.args=2
tk func.vprintf.ret=int
tk func.vscanf.arg.0=const char *,format
tk func.vscanf.arg.1=va_list,ap
tk func.vscanf.args=2
tk func.vscanf.ret=int
tk func.vsnprintf.arg.0=char *,s
tk func.vsnprintf.arg.1=size_t,size
tk func.vsnprintf.arg.2=const char *,format
tk func.vsnprintf.arg.3=va_list,arg
tk func.vsnprintf.args=4
tk func.vsnprintf.ret=int
tk func.vsprintf.arg.0=char *,s
tk func.vsprintf.arg.1=const char *,format
tk func.vsprintf.arg.2=va_list,arg
tk func.vsprintf.args=3
tk func.vsprintf.ret=int
tk func.vsscanf.arg.0=const char *,s
tk func.vsscanf.arg.1=const char *,format
tk func.vsscanf.arg.2=va_list,arg
tk func.vsscanf.args=3
tk func.vsscanf.ret=int
tk func.vswprintf.arg.0=wchar_t *,s
tk func.vswprintf.arg.1=size_t,n
tk func.vswprintf.arg.2=const wchar_t *,format
tk func.vswprintf.arg.3=va_list,arg
tk func.vswprintf.args=4
tk func.vswprintf.ret=int
tk func.vswscanf.arg.0=const wchar_t *,s
tk func.vswscanf.arg.1=const wchar_t *,format
tk func.vswscanf.arg.2=va_list,arg
tk func.vswscanf.args=3
tk func.vswscanf.ret=int
tk func.vwprintf.arg.0=const wchar_t *,format
tk func.vwprintf.arg.1=va_list,arg
tk func.vwprintf.args=2
tk func.vwprintf.ret=int
tk func.vwscanf.arg.0=const wchar_t *,format
tk func.vwscanf.arg.1=va_list,arg
tk func.vwscanf.args=2
tk func.vwscanf.ret=int
tk func.wait.arg.0=int *,wstatus
tk func.wait.args=1
tk func.wait.ret=pid_t
tk func.waitid.arg.0=idtype_t,idtype
tk func.waitid.arg.1=id_t,id
tk func.waitid.arg.2=siginfo_t *,infop
tk func.waitid.arg.3=int,options
tk func.waitid.args=4
tk func.waitid.ret=int
tk func.waitpid.arg.0=pid_t,pid
tk func.waitpid.arg.1=int *,wstatus
tk func.waitpid.arg.2=int,options
tk func.waitpid.args=3
tk func.waitpid.ret=pid_t
tk func.warn.arg.0=const char *,format
tk func.warn.args=1
tk func.warn.ret=void
tk func.warnc.arg.0=const char *,format
tk func.warnc.arg.1=int,opt
tk func.warnc.args=2
tk func.warnc.ret=void
tk func.warnx.arg.0=const char *,format
tk func.warnx.args=1
tk func.warnx.ret=void
tk func.wcrtomb.arg.0=char *,s
tk func.wcrtomb.arg.1=wchar_t,wc
tk func.wcrtomb.arg.2=mbstate_t *,ps
tk func.wcrtomb.args=3
tk func.wcrtomb.ret=size_t
tk func.wcscat.arg.0=wchar_t *,s1
tk func.wcscat.arg.1=const wchar_t *,s2
tk func.wcscat.args=2
tk func.wcscat.ret=wchar_t*
tk func.wcschr.arg.0=wchar_t *,s
tk func.wcschr.arg.1=wchar_t,c
tk func.wcschr.args=2
tk func.wcschr.ret=wchar_t*
tk func.wcscmp.arg.0=const wchar_t *,s1
tk func.wcscmp.arg.1=const wchar_t *,s2
tk func.wcscmp.args=2
tk func.wcscmp.ret=int
tk func.wcscoll.arg.0=const wchar_t *,s1
tk func.wcscoll.arg.1=const wchar_t *,s2
tk func.wcscoll.args=2
tk func.wcscoll.ret=int
tk func.wcscpy.arg.0=wchar_t *,s1
tk func.wcscpy.arg.1=const wchar_t *,s2
tk func.wcscpy.args=2
tk func.wcscpy.ret=wchar_t*
tk func.wcscspn.arg.0=const wchar_t *,s1
tk func.wcscspn.arg.1=const wchar_t *,s2
tk func.wcscspn.args=2
tk func.wcscspn.ret=size_t
tk func.wcsftime.arg.0=wchar_t *,s
tk func.wcsftime.arg.1=size_t,maxsize
tk func.wcsftime.arg.2=const wchar_t *,format
tk func.wcsftime.arg.3=const tm *,timeptr
tk func.wcsftime.args=4
tk func.wcsftime.ret=size_t
tk func.wcslen.arg.0=const wchar_t *,s
tk func.wcslen.args=1
tk func.wcslen.ret=size_t
tk func.wcsncat.arg.0=wchar_t *,s1
tk func.wcsncat.arg.1=const wchar_t *,s2
tk func.wcsncat.arg.2=size_t,n
tk func.wcsncat.args=3
tk func.wcsncat.ret=wchar_t*
tk func.wcsncmp.arg.0=const wchar_t *,s1
tk func.wcsncmp.arg.1=const wchar_t *,s2
tk func.wcsncmp.arg.2=size_t,n
tk func.wcsncmp.args=3
tk func.wcsncmp.ret=int
tk func.wcsncpy.arg.0=wchar_t *,s1
tk func.wcsncpy.arg.1=const wchar_t *,s2
tk func.wcsncpy.arg.2=size_t,n
tk func.wcsncpy.args=3
tk func.wcsncpy.ret=wchar_t*
tk func.wcspbrk.arg.0=wchar_t *,s1
tk func.wcspbrk.arg.1=const wchar_t *,s2
tk func.wcspbrk.args=2
tk func.wcspbrk.ret=wchar_t*
tk func.wcsrchr.arg.0=wchar_t *,s
tk func.wcsrchr.arg.1=wchar_t,c
tk func.wcsrchr.args=2
tk func.wcsrchr.ret=wchar_t*
tk func.wcsrtombs.arg.0=char *,dst
tk func.wcsrtombs.arg.1=const wchar_t* *,src
tk func.wcsrtombs.arg.2=size_t,len
tk func.wcsrtombs.arg.3=mbstate_t *,ps
tk func.wcsrtombs.args=4
tk func.wcsrtombs.ret=size_t
tk func.wcsspn.arg.0=const wchar_t *,s1
tk func.wcsspn.arg.1=const wchar_t *,s2
tk func.wcsspn.args=2
tk func.wcsspn.ret=size_t
tk func.wcsstr.arg.0=wchar_t *,s1
tk func.wcsstr.arg.1=const wchar_t *,s2
tk func.wcsstr.args=2
tk func.wcsstr.ret=wchar_t*
tk func.wcstod.arg.0=const wchar_t *,nptr
tk func.wcstod.arg.1=wchar_t* *,endptr
tk func.wcstod.args=2
tk func.wcstod.ret=double
tk func.wcstof.arg.0=const wchar_t *,nptr
tk func.wcstof.arg.1=wchar_t* *,endptr
tk func.wcstof.args=2
tk func.wcstof.ret=float
tk func.wcstoimax.arg.0=const,wchar_t*
tk func.wcstoimax.arg.1=wchar_t* *,endptr
tk func.wcstoimax.arg.2=int,base
tk func.wcstoimax.args=3
tk func.wcstoimax.ret=intmax_t
tk func.wcstok.arg.0=wchar_t *,s1
tk func.wcstok.arg.1=const wchar_t *,s2
tk func.wcstok.arg.2=wchar_t* *,ptr
tk func.wcstok.args=3
tk func.wcstok.ret=wchar_t*
tk func.wcstol.arg.0=const wchar_t *,nptr
tk func.wcstol.arg.1=wchar_t* *,endptr
tk func.wcstol.arg.2=int,base
tk func.wcstol.args=3
tk func.wcstol.ret=long
tk func.wcstold.arg.0=const wchar_t *,nptr
tk func.wcstold.arg.1=wchar_t* *,endptr
tk func.wcstold.args=2
tk func.wcstold.ret=long double
tk func.wcstoll.arg.0=const wchar_t *,nptr
tk func.wcstoll.arg.1=wchar_t* *,endptr
tk func.wcstoll.arg.2=int,base
tk func.wcstoll.args=3
tk func.wcstoll.ret=long long
tk func.wcstombs.arg.0=char *,s
tk func.wcstombs.arg.1=const wchar_t *,pwcs
tk func.wcstombs.arg.2=size_t,n
tk func.wcstombs.args=3
tk func.wcstombs.ret=size_t
tk func.wcstoul.arg.0=const wchar_t *,nptr
tk func.wcstoul.arg.1=wchar_t* *,endptr
tk func.wcstoul.arg.2=int,base
tk func.wcstoul.args=3
tk func.wcstoul.ret=long
tk func.wcstoull.arg.0=const wchar_t *,nptr
tk func.wcstoull.arg.1=wchar_t* *,endptr
tk func.wcstoull.arg.2=int,base
tk func.wcstoull.args=3
tk func.wcstoull.ret=long long
tk func.wcstoumax.arg.0=const,wchar_t*
tk func.wcstoumax.arg.1=wchar_t* *,endptr
tk func.wcstoumax.arg.2=int,base
tk func.wcstoumax.args=3
tk func.wcstoumax.ret=uintmax_t
tk func.wcsxfrm.arg.0=wchar_t *,s1
tk func.wcsxfrm.arg.1=const wchar_t *,s2
tk func.wcsxfrm.arg.2=size_t,n
tk func.wcsxfrm.args=3
tk func.wcsxfrm.ret=size_t
tk func.wctob.arg.0=wint_t,c
tk func.wctob.args=1
tk func.wctob.ret=int
tk func.wctomb.arg.0=char *,s
tk func.wctomb.arg.1=wchar_t,wchar
tk func.wctomb.args=2
tk func.wctomb.ret=int
tk func.wctrans.arg.0=const char *,property
tk func.wctrans.args=1
tk func.wctrans.ret=wctrans_t
tk func.wctype.arg.0=const char *,property
tk func.wctype.args=1
tk func.wctype.ret=wctype_t
tk func.wmemchr.arg.0=wchar_t *,s
tk func.wmemchr.arg.1=wchar_t,c
tk func.wmemchr.arg.2=size_t,n
tk func.wmemchr.args=3
tk func.wmemchr.ret=wchar_t*
tk func.wmemcmp.arg.0=wchar_t *,s1
tk func.wmemcmp.arg.1=const wchar_t *,s2
tk func.wmemcmp.arg.2=size_t,n
tk func.wmemcmp.args=3
tk func.wmemcmp.ret=int
tk func.wmemcpy.arg.0=wchar_t *,s1
tk func.wmemcpy.arg.1=const wchar_t *,s2
tk func.wmemcpy.arg.2=size_t,n
tk func.wmemcpy.args=3
tk func.wmemcpy.ret=wchar_t*
tk func.wmemmove.arg.0=wchar_t *,s1
tk func.wmemmove.arg.1=const wchar_t *,s2
tk func.wmemmove.arg.2=size_t,n
tk func.wmemmove.args=3
tk func.wmemmove.ret=wchar_t*
tk func.wmemset.arg.0=wchar_t *,s
tk func.wmemset.arg.1=wchar_t,c
tk func.wmemset.arg.2=size_t,n
tk func.wmemset.args=3
tk func.wmemset.ret=wchar_t*
tk func.wprintf.arg.0=const wchar_t *,format
tk func.wprintf.args=1
tk func.wprintf.ret=int
tk func.write.arg.0=int,fd
tk func.write.arg.1=const char *,ptr
tk func.write.arg.2=size_t,nbytes
tk func.write.args=3
tk func.write.ret=ssize_t
tk func.wscanf.arg.0=const wchar_t *,format
tk func.wscanf.args=1
tk func.wscanf.ret=int
tk func.xmalloc.arg.0=size_t,size
tk func.xmalloc.args=1
tk func.xmalloc.ret=void *
tk fwide=func
tk fwprintf=func
tk fwrite=func
tk fwscanf=func
tk getc=func
tk getchar=func
tk getenv=func
tk geteuid=func
tk getopt=func
tk getpid=func
tk getprogname=func
tk gets=func
tk getsockname=func
tk getsockopt=func
tk getuid=func
tk getwc=func
tk getwchar=func
tk gid_t=type
tk gmtime=func
tk group_from_gid=func
tk humanize_number=func
tk hypot=func
tk hypotf=func
tk hypotl=func
tk ilogb=func
tk ilogbf=func
tk ilogbl=func
tk imaxabs=func
tk imaxdiv=func
tk inet_aton=func
tk inet_ntoa=func
tk initstate=func
tk int=type
tk int16_t=type
tk int32_t=type
tk int64_t=type
tk int8_t=type
tk ioctl=func
tk isalnum=func
tk isalpha=func
tk isatty=func
tk isblank=func
tk iscntrl=func
tk isdigit=func
tk isfinite=func
tk isgraph=func
tk isgreater=func
tk isgreaterequal=func
tk isinf=func
tk isless=func
tk islessequal=func
tk islessgreater=func
tk islower=func
tk isnan=func
tk isnormal=func
tk isprint=func
tk ispunct=func
tk isspace=func
tk isunordered=func
tk isupper=func
tk iswalnum=func
tk iswalpha=func
tk iswblank=func
tk iswcntrl=func
tk iswctype=func
tk iswdigit=func
tk iswgraph=func
tk iswlower=func
tk iswprint=func
tk iswpunct=func
tk iswspace=func
tk iswupper=func
tk iswxdigit=func
tk isxdigit=func
tk kill=func
tk labs=func
tk ldexp=func
tk ldexpf=func
tk ldexpl=func
tk ldiv=func
tk lgamma=func
tk lgammaf=func
tk lgammal=func
tk llabs=func
tk lldiv=func
tk llrint=func
tk llrintf=func
tk llrintl=func
tk llround=func
tk llroundf=func
tk llroundl=func
tk localeconv=func
tk localtime=func
tk log=func
tk log10=func
tk log10f=func
tk log10l=func
tk log1p=func
tk log1pf=func
tk log1pl=func
tk log2=func
tk log2f=func
tk log2l=func
tk logb=func
tk logbf=func
tk logbl=func
tk logf=func
tk logl=func
tk long=type
tk long long=type
tk longjmp=func
tk lrint=func
tk lrintf=func
tk lrintl=func
tk lround=func
tk lroundf=func
tk lroundl=func
tk lstat=func
tk main=func
tk malloc=func
tk maskrune=func
tk mblen=func
tk mbrlen=func
tk mbrtowc=func
tk mbsinit=func
tk mbsrtowcs=func
tk mbstowcs=func
tk mbtowc=func
tk memchr=func
tk memcmp=func
tk memcpy=func
tk memmem=func
tk memmove=func
tk memset=func
tk mkstemp=func
tk mktemp=func
tk mktime=func
tk mmap=func
tk modf=func
tk modff=func
tk modfl=func
tk munmap=func
tk nan=func
tk nanf=func
tk nanl=func
tk nanosleep=func
tk nearbyint=func
tk nearbyintf=func
tk nearbyintl=func
tk nextafter=func
tk nextafterf=func
tk nextafterl=func
tk nexttoward=func
tk nexttowardf=func
tk nexttowardl=func
tk nl_langinfo=func
tk nl_langinfo_l=func
tk objc_enumerationMutation=func
tk objc_msgSend=func
tk objc_msgSendSuper2=func
tk objc_release=func
tk objc_retain=func
tk objc_retainAutoreleasedReturnValue=func
tk objc_storeStrong=func
tk open=func
tk openat=func
tk pclose=func
tk perror=func
tk pid_t=type
tk popen=func
tk pow=func
tk powf=func
tk powl=func
tk prctl=func
tk printf=func
tk ptrace=func
tk putc=func
tk putchar=func
tk puts=func
tk pututxline=func
tk putwc=func
tk putwchar=func
tk qsort=func
tk quick_exit=func
tk raise=func
tk rand=func
tk random=func
tk read=func
tk realloc=func
tk reallocf=func
tk recv=func
tk remainder=func
tk remainderf=func
tk remainderl=func
tk remove=func
tk remquo=func
tk remquof=func
tk remquol=func
tk rename=func
tk rewind=func
tk rint=func
tk rintf=func
tk rintl=func
tk round=func
tk roundf=func
tk roundl=func
tk scalbln=func
tk scalblnf=func
tk scalblnl=func
tk scalbn=func
tk scalbnf=func
tk scalbnl=func
tk scanf=func
tk select=func
tk send=func
tk setbuf=func
tk setenv=func
tk setjmp=func
tk setlocale=func
tk setsockopt=func
tk setstate=func
tk setvbuf=func
tk short=type
tk sigaction=func
tk signal=func
tk signbit=func
tk sin=func
tk sinf=func
tk sinh=func
tk sinhf=func
tk sinhl=func
tk sinl=func
tk size_t=type
tk sleep=func
tk snprintf=func
tk snprintf_chk=func
tk socket=func
tk sprintf=func
tk sprintf_chk=func
tk sqrt=func
tk sqrtf=func
tk sqrtl=func
tk srand=func
tk srandom=func
tk srandomdev=func
tk sscanf=func
tk strcasecmp=func
tk strcat=func
tk strchr=func
tk strcmp=func
tk strcoll=func
tk strcpy=func
tk strcpy_chk=func
tk strcspn=func
tk strdup=func
tk strerror=func
tk strftime=func
tk strlcpy=func
tk strlen=func
tk strmode=func
tk strncasecmp=func
tk strncat=func
tk strncmp=func
tk strncpy=func
tk strndup=func
tk strpbrk=func
tk strrchr=func
tk strspn=func
tk strstr=func
tk strtod=func
tk strtof=func
tk strtoimax=func
tk strtok=func
tk strtol=func
tk strtold=func
tk strtoll=func
tk strtoul=func
tk strtoull=func
tk strtoumax=func
tk strxfrm=func
tk swprintf=func
tk swscanf=func
tk symlink=func
tk system=func
tk tan=func
tk tanf=func
tk tanh=func
tk tanhf=func
tk tanhl=func
tk tanl=func
tk textdomain=func
tk tgamma=func
tk tgammaf=func
tk tgammal=func
tk tgoto=func
tk time=func
tk tmpfile=func
tk tmpnam=func
tk tolower=func
tk toupper=func
tk towctrans=func
tk towlower=func
tk towupper=func
tk trunc=func
tk truncf=func
tk truncl=func
tk type.char=c
tk type.char *=z
tk type.char *.size=64
tk type.char.size=8
tk type.double=F
tk type.double.size=64
tk type.float=f
tk type.float.size=32
tk type.gid_t=d
tk type.gid_t.uid=64
tk type.int=d
tk type.int.size=32
tk type.int16_t=w
tk type.int16_t.size=16
tk type.int32_t=d
tk type.int32_t.size=32
tk type.int64_t=q
tk type.int64_t.size=64
tk type.int8_t=b
tk type.int8_t.size=8
tk type.long=x
tk type.long long=q
tk type.long long.size=64
tk type.long.size=64
tk type.pid_t=d
tk type.pid_t.pid=64
tk type.short=w
tk type.short.size=16
tk type.size_t=x
tk type.size_t.size=64
tk type.uid_t=d
tk type.uid_t.size=64
tk type.uid_t.uid=64
tk type.uint16_t=w
tk type.uint16_t.size=16
tk type.uint32_t=d
tk type.uint32_t.size=32
tk type.uint64_t=q
tk type.uint64_t.size=64
tk type.uint8_t=b
tk type.uint8_t.size=8
tk type.unsigned char=b
tk type.unsigned char.size=8
tk type.unsigned int=i
tk type.unsigned int.size=32
tk type.unsigned short=w
tk type.unsigned short.size=16
tk type.void *=p
tk type.void *.size=64
tk uid_t=type
tk uint16_t=type
tk uint32_t=type
tk uint64_t=type
tk uint8_t=type
tk umask=func
tk ungetc=func
tk ungetwc=func
tk unlink=func
tk unsigned char=type
tk unsigned int=type
tk unsigned short=type
tk user_from_uid=func
tk usleep=func
tk vfprintf=func
tk vfscanf=func
tk vfwprintf=func
tk vfwscanf=func
tk void *=type
tk vprintf=func
tk vscanf=func
tk vsnprintf=func
tk vsprintf=func
tk vsscanf=func
tk vswprintf=func
tk vswscanf=func
tk vwprintf=func
tk vwscanf=func
tk wait=func
tk waitid=func
tk waitpid=func
tk warn=func
tk warnc=func
tk warnx=func
tk wcrtomb=func
tk wcscat=func
tk wcschr=func
tk wcscmp=func
tk wcscoll=func
tk wcscpy=func
tk wcscspn=func
tk wcsftime=func
tk wcslen=func
tk wcsncat=func
tk wcsncmp=func
tk wcsncpy=func
tk wcspbrk=func
tk wcsrchr=func
tk wcsrtombs=func
tk wcsspn=func
tk wcsstr=func
tk wcstod=func
tk wcstof=func
tk wcstoimax=func
tk wcstok=func
tk wcstol=func
tk wcstold=func
tk wcstoll=func
tk wcstombs=func
tk wcstoul=func
tk wcstoull=func
tk wcstoumax=func
tk wcsxfrm=func
tk wctob=func
tk wctomb=func
tk wctrans=func
tk wctype=func
tk wmemchr=func
tk wmemcmp=func
tk wmemcpy=func
tk wmemmove=func
tk wmemset=func
tk wprintf=func
tk write=func
tk wscanf=func
tk xmalloc=func
# macros
# aliases
# seek
s 0x00400922
